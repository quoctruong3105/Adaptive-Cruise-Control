#include <mega328p.h>
#include <alcd.h>
#include <delay.h>
#include <stdio.h>

#define CRUISE_BTN PIND.2
#define ADAPTIVE_BTN PIND.2
#define RES_BTN PINC.2
#define CANCEL_BTN PINC.3
#define SET_BTN PINC.4
#define GAS_PEDAL PINC.0
#define BRAKE_PEDAL PINC.1
#define ECHO_PORT PORTB.0
#define TRIGGER_PORT PORTB.1
#define ON 0

char mode = 'n'; //There are 3 modes: a <-> adaptive cruise control, c <-> cruise control, n <-> normal
char status = 'i'; // Status of mode cruise control or adaptive cruise control, it can be i<->initial, w <-> waiting and s <-> set
unsigned int dem = 0;
unsigned int speed = 0;

interrupt [PC_INT1] void pin_change_isr1(void)
{
    if(SET_BTN == ON && status == 'i' && speed >= 45)
    {
        status = 's';
    }
    else if(RES_BTN == ON && status == 'w' && speed >= 45)
    {
        status = 's';
    }
}

// Active cruise control mode
interrupt [EXT_INT0] void ext_int0_isr(void)
{
     if(dem == 0)
     {
          mode = 'c';
     }
     else
     {
          mode = 'n';
          status = 'i';
     }
     dem++;
     if(dem == 2)
     {
          dem = 0;
     }
}

// Active adaptive cruise control mode
interrupt [EXT_INT1] void ext_int1_isr(void)
{
     if(mode == 'c')
     {
          mode = 'a';
     }
}

void showLCD(unsigned int speed)
{
     char buffer[16];
     lcd_clear();
     sprintf(buffer, "SPD: %d km/h", speed);
     lcd_gotoxy(0,0);
     lcd_puts(buffer);
     lcd_gotoxy(0,1);
     if(mode == 'a')
     {
        lcd_puts("MODE: AC-CONTROL");
     }
     else if(mode == 'c')
     {
        lcd_puts("MODE: C-CONTROL");
     }
     else
     {
        lcd_puts("MODE: NORMAL");
     }
}

void normalMode()
{

          if(GAS_PEDAL == ON && speed < 200)
          {
                speed++;
          }
          else if(BRAKE_PEDAL == ON && speed > 0)
          {
                if(speed > 120)
                {
                    speed-=10;
                }
                else if(speed > 80 && speed < 120)
                {
                    speed-=5;
                }
                else if(speed > 30 && speed < 80)
                {
                    speed-=3;
                }
                else
                {
                    speed--;
                }
          }
          else
          {
               if(speed > 0)
               {
                    speed--;
                    delay_ms(1000);
               }
          }
          showLCD(speed);
}

void wheelAndThrottleControl()
{
    if(speed == 0)
    {
        DDRD.5 = 0;
        DDRD.6 = 0;
    }
    else
    {
        DDRD.5 = 1;
        DDRD.6 = 1;
        OCR0B = speed*4*60/200; // Speed of wheel
        OCR0A = 32*(0.005*speed + 0.5) - 1; // Angle position of throttle
    }
}

void brakeLightControl()
{
    if(BRAKE_PEDAL == ON)
    {
        PORTB.2 = 1;
    }
    else
    {
        PORTB.2 = 0;
    }
}

void main(void)
{
// Crystal Oscillator division factor: 1
#pragma optsize-
CLKPR=0x80;
CLKPR=0x00;
#ifdef _OPTIMIZE_SIZE_
#pragma optsize+
#endif

// Timer/Counter 0 initialization
TCCR0A=0b10100011;
TCCR0B=0b00000100;

// External Interrupt(s) initialization
EICRA=0x0A;
EIMSK=0x03;
EIFR=0x03;
PCICR=0x02;
PCMSK1=0x1F;
PCIFR=0x02;

// USART initialization
UCSR0A=0x00;
UCSR0B=0x48;
UCSR0C=0x06;
UBRR0H=0x00;
UBRR0L=0x08;

// Alphanumeric LCD initialization
lcd_init(16);

// Set up for all Button
PORTC = 0xff;
PORTD.2 = 1;
PORTD.3 = 1;


// Set up for ultrasonic sensor
DDRB.0 = 0;
DDRB.1 = 1;

// Set up for brake light
DDRB.2 = 1;
PORTB.2 = 0;

// Global enable interrupts
#asm("sei")

while (1)
      {
        // Adaptive cruise control mode
        if(mode == 'a')
        {
          wheelAndThrottleControl();
          brakeLightControl();
          delay_ms(200);
        }
        // Cruise control mode
        else if(mode == 'c')
        {
          while(mode == 'c' && status == 'i')
          {
               if(status == 's')
               {
                    break;
               }
               else
               {
                    normalMode();
               }
               wheelAndThrottleControl();
               brakeLightControl();
               delay_ms(200);
          }
          // When set button is pressed one time, +/-/cancel buttons are actived
          while(mode == 'c' && status == 's')
          {
               if(RES_BTN == ON && speed >= 45)
               {
                    speed++;
               }
               else if(SET_BTN == ON && speed <= 200 && speed > 45)
               {
                    speed--;
               }
               else if(CANCEL_BTN == ON || BRAKE_PEDAL == ON)
               {
                    status = 'w';
                    break;
               }
               wheelAndThrottleControl();
               brakeLightControl();
               showLCD(speed);
               delay_ms(200);
          }
          // If set button is pressed, system will lock the speed
          while(mode == 'c' && status == 'w')
          {
               if(status == 's')
               {
                    break;
               }
               else
               {
                    normalMode();
               }
               wheelAndThrottleControl();
               brakeLightControl();
               delay_ms(200);
          }
        }
        // Normal mode
        else if(mode == 'n')
        {
          wheelAndThrottleControl();
          brakeLightControl();
          normalMode();
          delay_ms(200);
        }
      }
}
