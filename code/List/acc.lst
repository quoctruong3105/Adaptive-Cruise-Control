
AVRASM ver. 2.1.30  E:\Projects\Adaptice Cruise Control\code\List\acc.asm Wed Oct 19 09:33:54 2022

E:\Projects\Adaptice Cruise Control\code\List\acc.asm(1061): warning: Register r4 already defined by the .DEF directive
E:\Projects\Adaptice Cruise Control\code\List\acc.asm(1062): warning: Register r3 already defined by the .DEF directive
E:\Projects\Adaptice Cruise Control\code\List\acc.asm(1063): warning: Register r5 already defined by the .DEF directive
E:\Projects\Adaptice Cruise Control\code\List\acc.asm(1064): warning: Register r7 already defined by the .DEF directive
E:\Projects\Adaptice Cruise Control\code\List\acc.asm(1065): warning: Register r9 already defined by the .DEF directive
E:\Projects\Adaptice Cruise Control\code\List\acc.asm(1066): warning: Register r11 already defined by the .DEF directive
E:\Projects\Adaptice Cruise Control\code\List\acc.asm(1067): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Advanced
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega328P
                 ;Program type             : Application
                 ;Clock frequency          : 8,000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2303
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _mode=R4
                 	.DEF _status=R3
                 	.DEF _dem=R5
                 	.DEF _gapLevel=R7
                 	.DEF _speed=R9
                 	.DEF _speedTemp=R11
                 	.DEF _timerOverFlow=R13
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00a2 	JMP  __RESET
000002 940c 013b 	JMP  _ext_int0_isr
000004 940c 015b 	JMP  _ext_int1_isr
000006 940c 0000 	JMP  0x00
000008 940c 00e3 	JMP  _pin_change_isr1
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 00da 	JMP  _timer1_ovf_isr
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _0xA9:
000034 6e69
000035 0000
000036 0000
000037 0000      	.DB  0x69,0x6E,0x0,0x0,0x0,0x0,0x0,0x0
000038 0000
000039 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x0:
00003a 5053
00003b 3a44
00003c 2520
00003d 2064      	.DB  0x53,0x50,0x44,0x3A,0x20,0x25,0x64,0x20
00003e 6d6b
00003f 682f
000040 4d00
000041 444f      	.DB  0x6B,0x6D,0x2F,0x68,0x0,0x4D,0x4F,0x44
000042 3a45
000043 4120
000044 4343
000045 4700      	.DB  0x45,0x3A,0x20,0x41,0x43,0x43,0x0,0x47
000046 5041
000047 203a
000048 7c00
000049 007c      	.DB  0x41,0x50,0x3A,0x20,0x0,0x7C,0x7C,0x0
00004a 7c7c
00004b 007c
00004c 4944
00004d 3a53      	.DB  0x7C,0x7C,0x7C,0x0,0x44,0x49,0x53,0x3A
00004e 2520
00004f 2e30
000050 6632
000051 6d20      	.DB  0x20,0x25,0x30,0x2E,0x32,0x66,0x20,0x6D
000052 4d00
000053 444f
000054 3a45
000055 4320      	.DB  0x0,0x4D,0x4F,0x44,0x45,0x3A,0x20,0x43
000056 0043
000057 4553
000058 2054
000059 4f54      	.DB  0x43,0x0,0x53,0x45,0x54,0x20,0x54,0x4F
00005a 4120
00005b 5443
00005c 5649
00005d 0045      	.DB  0x20,0x41,0x43,0x54,0x49,0x56,0x45,0x0
00005e 5453
00005f 5441
000060 5355
000061 203a      	.DB  0x53,0x54,0x41,0x54,0x55,0x53,0x3A,0x20
000062 4150
000063 5355
000064 0045
000065 5453      	.DB  0x50,0x41,0x55,0x53,0x45,0x0,0x53,0x54
000066 5441
000067 5355
000068 203a
000069 4341      	.DB  0x41,0x54,0x55,0x53,0x3A,0x20,0x41,0x43
00006a 4954
00006b 4556
00006c 4d00
00006d 444f      	.DB  0x54,0x49,0x56,0x45,0x0,0x4D,0x4F,0x44
00006e 3a45
00006f 4e20
000070 524f
000071 414d      	.DB  0x45,0x3A,0x20,0x4E,0x4F,0x52,0x4D,0x41
000072 004c      	.DB  0x4C,0x0
                 _0x2000003:
000073 c080      	.DB  0x80,0xC0
                 _0x2020000:
000074 4e2d
000075 4e41
E:\Projects\Adaptice Cruise Control\code\List\acc.asm(1128): warning: .cseg .db misalignment - padding zero byte
000076 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
E:\Projects\Adaptice Cruise Control\code\List\acc.asm(1130): warning: .cseg .db misalignment - padding zero byte
000077 0001      	.DB  0x1
                 _0x20A0000:
000078 4e2d
000079 4e41
00007a 4900
00007b 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\Projects\Adaptice Cruise Control\code\List\acc.asm(1133): warning: .cseg .db misalignment - padding zero byte
00007c 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00007d 000a      	.DW  0x0A
00007e 0300      	.DW  _0x22
00007f 0081      	.DW  _0x0*2+13
                 
000080 0006      	.DW  0x06
000081 030a      	.DW  _0x22+10
000082 008b      	.DW  _0x0*2+23
                 
000083 0003      	.DW  0x03
000084 0310      	.DW  _0x22+16
000085 0091      	.DW  _0x0*2+29
                 
000086 0004      	.DW  0x04
000087 0313      	.DW  _0x22+19
000088 0094      	.DW  _0x0*2+32
                 
000089 0009      	.DW  0x09
00008a 0317      	.DW  _0x22+23
00008b 00a5      	.DW  _0x0*2+49
                 
00008c 000e      	.DW  0x0E
00008d 0320      	.DW  _0x22+32
00008e 00ae      	.DW  _0x0*2+58
                 
00008f 000e      	.DW  0x0E
000090 032e      	.DW  _0x22+46
000091 00bc      	.DW  _0x0*2+72
                 
000092 000f      	.DW  0x0F
000093 033c      	.DW  _0x22+60
000094 00ca      	.DW  _0x0*2+86
                 
000095 000d      	.DW  0x0D
000096 034b      	.DW  _0x22+75
000097 00d9      	.DW  _0x0*2+101
                 
000098 000c      	.DW  0x0C
000099 0003      	.DW  0x03
00009a 0068      	.DW  _0xA9*2
                 
00009b 0002      	.DW  0x02
00009c 035c      	.DW  __base_y_G100
00009d 00e6      	.DW  _0x2000003*2
                 
00009e 0001      	.DW  0x01
00009f 0363      	.DW  __seed_G105
0000a0 00ee      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
0000a1 0000      	.DW  0
                 
                 __RESET:
0000a2 94f8      	CLI
0000a3 27ee      	CLR  R30
0000a4 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000a5 e0f1      	LDI  R31,1
0000a6 bff5      	OUT  MCUCR,R31
0000a7 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
0000a8 e1f8      	LDI  R31,0x18
0000a9 95a8      	WDR
0000aa b7a4      	IN   R26,MCUSR
0000ab 7fa7      	CBR  R26,8
0000ac bfa4      	OUT  MCUSR,R26
0000ad 93f0 0060 	STS  WDTCSR,R31
0000af 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
0000b1 e08d      	LDI  R24,(14-2)+1
0000b2 e0a2      	LDI  R26,2
0000b3 27bb      	CLR  R27
                 __CLEAR_REG:
0000b4 93ed      	ST   X+,R30
0000b5 958a      	DEC  R24
0000b6 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000b7 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000b8 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000b9 e0a0      	LDI  R26,LOW(__SRAM_START)
0000ba e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000bb 93ed      	ST   X+,R30
0000bc 9701      	SBIW R24,1
0000bd f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000be efea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000bf e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000c0 9185      	LPM  R24,Z+
0000c1 9195      	LPM  R25,Z+
0000c2 9700      	SBIW R24,0
0000c3 f061      	BREQ __GLOBAL_INI_END
0000c4 91a5      	LPM  R26,Z+
0000c5 91b5      	LPM  R27,Z+
0000c6 9005      	LPM  R0,Z+
0000c7 9015      	LPM  R1,Z+
0000c8 01bf      	MOVW R22,R30
0000c9 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000ca 9005      	LPM  R0,Z+
0000cb 920d      	ST   X+,R0
0000cc 9701      	SBIW R24,1
0000cd f7e1      	BRNE __GLOBAL_INI_LOOP
0000ce 01fb      	MOVW R30,R22
0000cf cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0000d0 e0e0      	LDI  R30,__GPIOR0_INIT
0000d1 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000d2 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000d3 bfed      	OUT  SPL,R30
0000d4 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000d5 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000d6 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000d7 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000d8 940c 03ce 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;#include <mega328p.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;
                 ;#define CRUISE_BTN PIND.2
                 ;#define ADAPTIVE_BTN PIND.2
                 ;#define RES_BTN PINC.2
                 ;#define CANCEL_BTN PINC.3
                 ;#define SET_BTN PINC.4
                 ;#define GAS_PEDAL PINC.0
                 ;#define BRAKE_PEDAL PINC.1
                 ;#define ECHO_PORT PORTB.0
                 ;#define TRIGGER_PORT PORTB.1
                 ;#define ON 0
                 ;
                 ;char mode = 'n'; // There are 3 modes: a <-> adaptive cruise control, c <-> cruise control, n <-> normal
                 ;char status = 'i'; // Status of mode cruise control or adaptive cruise control, it can be i<->initial, w <-> waiting and s <-> set
                 ;unsigned int dem = 0, gapLevel = 0;
                 ;unsigned int speed, speedTemp;
                 ;float distance;
                 ;int timerOverFlow = 0;
                 ;
                 ;void wheelAndThrottleControl();
                 ;void brakeLightControl();
                 ;void showLCD(unsigned int);
                 ;void activeRadar();
                 ;void reIncre();
                 ;
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 001F {
                 
                 	.CSEG
                 _timer1_ovf_isr:
0000da 93ea      	ST   -Y,R30
0000db 93fa      	ST   -Y,R31
0000dc b7ef      	IN   R30,SREG
0000dd 93ea      	ST   -Y,R30
                 ; 0000 0020     timerOverFlow++;
0000de e0e1      	LDI  R30,LOW(1)
0000df e0f0      	LDI  R31,HIGH(1)
                +
0000e0 0ede     +ADD R13 , R30
0000e1 1eef     +ADC R14 , R31
                 	__ADDWRR 13,14,30,31
                 ; 0000 0021 }
0000e2 c092      	RJMP _0xA8
                 ;
                 ;interrupt [PC_INT1] void pin_change_isr1(void)
                 ; 0000 0024 {
                 _pin_change_isr1:
0000e3 920a      	ST   -Y,R0
0000e4 921a      	ST   -Y,R1
0000e5 92fa      	ST   -Y,R15
0000e6 936a      	ST   -Y,R22
0000e7 937a      	ST   -Y,R23
0000e8 938a      	ST   -Y,R24
0000e9 939a      	ST   -Y,R25
0000ea 93aa      	ST   -Y,R26
0000eb 93ba      	ST   -Y,R27
0000ec 93ea      	ST   -Y,R30
0000ed 93fa      	ST   -Y,R31
0000ee b7ef      	IN   R30,SREG
0000ef 93ea      	ST   -Y,R30
                 ; 0000 0025     if(SET_BTN == ON && status == 'i' && speed >= 45)
0000f0 e0a0      	LDI  R26,0
0000f1 9934      	SBIC 0x6,4
0000f2 e0a1      	LDI  R26,1
0000f3 30a0      	CPI  R26,LOW(0x0)
0000f4 f441      	BRNE _0x4
0000f5 e6e9      	LDI  R30,LOW(105)
0000f6 15e3      	CP   R30,R3
0000f7 f429      	BRNE _0x4
0000f8 e2ed      	LDI  R30,LOW(45)
0000f9 e0f0      	LDI  R31,HIGH(45)
0000fa 169e      	CP   R9,R30
0000fb 06af      	CPC  R10,R31
0000fc f408      	BRSH _0x5
                 _0x4:
0000fd c00b      	RJMP _0x3
                 _0x5:
                 ; 0000 0026     {
                 ; 0000 0027         speedTemp = speed;
                +
0000fe 2cb9     +MOV R11 , R9
0000ff 2cca     +MOV R12 , R10
                 	__MOVEWRR 11,12,9,10
                 ; 0000 0028         status = 's';
000100 e7e3      	LDI  R30,LOW(115)
000101 2e3e      	MOV  R3,R30
                 ; 0000 0029         wheelAndThrottleControl();
000102 940e 093c 	CALL SUBOPT_0x0
                 ; 0000 002A         brakeLightControl();
                 ; 0000 002B         showLCD(speed);
000104 940e 0940 	CALL SUBOPT_0x1
                 ; 0000 002C         delay_ms(200);
000106 940e 0944 	CALL SUBOPT_0x2
                 ; 0000 002D     }
                 ; 0000 002E     else if(RES_BTN == ON && mode == 'c' && status == 'w')
000108 c024      	RJMP _0x6
                 _0x3:
000109 e0a0      	LDI  R26,0
00010a 9932      	SBIC 0x6,2
00010b e0a1      	LDI  R26,1
00010c 30a0      	CPI  R26,LOW(0x0)
00010d f431      	BRNE _0x8
00010e e6e3      	LDI  R30,LOW(99)
00010f 15e4      	CP   R30,R4
000110 f419      	BRNE _0x8
000111 e7e7      	LDI  R30,LOW(119)
000112 15e3      	CP   R30,R3
000113 f009      	BREQ _0x9
                 _0x8:
000114 c001      	RJMP _0x7
                 _0x9:
                 ; 0000 002F     {
                 ; 0000 0030         status = 's';
000115 c014      	RJMP _0xA2
                 ; 0000 0031         reIncre();
                 ; 0000 0032     }
                 ; 0000 0033     else if(RES_BTN == ON && mode == 'a' && status == 'w')
                 _0x7:
000116 e0a0      	LDI  R26,0
000117 9932      	SBIC 0x6,2
000118 e0a1      	LDI  R26,1
000119 30a0      	CPI  R26,LOW(0x0)
00011a f431      	BRNE _0xC
00011b e6e1      	LDI  R30,LOW(97)
00011c 15e4      	CP   R30,R4
00011d f419      	BRNE _0xC
00011e e7e7      	LDI  R30,LOW(119)
00011f 15e3      	CP   R30,R3
000120 f009      	BREQ _0xD
                 _0xC:
000121 c00b      	RJMP _0xB
                 _0xD:
                 ; 0000 0034     {
                 ; 0000 0035         if(distance < 100)
000122 940e 094a 	CALL SUBOPT_0x3
000124 940e 0953 	CALL SUBOPT_0x4
000126 f418      	BRSH _0xE
                 ; 0000 0036         {
                 ; 0000 0037             status = 's';
000127 e7e3      	LDI  R30,LOW(115)
000128 2e3e      	MOV  R3,R30
                 ; 0000 0038         }
                 ; 0000 0039         else
000129 c003      	RJMP _0xF
                 _0xE:
                 ; 0000 003A         {
                 ; 0000 003B             status = 's';
                 _0xA2:
00012a e7e3      	LDI  R30,LOW(115)
00012b 2e3e      	MOV  R3,R30
                 ; 0000 003C             reIncre();
00012c d17f      	RCALL _reIncre
                 ; 0000 003D         }
                 _0xF:
                 ; 0000 003E     }
                 ; 0000 003F }
                 _0xB:
                 _0x6:
00012d 91e9      	LD   R30,Y+
00012e bfef      	OUT  SREG,R30
00012f 91f9      	LD   R31,Y+
000130 91e9      	LD   R30,Y+
000131 91b9      	LD   R27,Y+
000132 91a9      	LD   R26,Y+
000133 9199      	LD   R25,Y+
000134 9189      	LD   R24,Y+
000135 9179      	LD   R23,Y+
000136 9169      	LD   R22,Y+
000137 90f9      	LD   R15,Y+
000138 9019      	LD   R1,Y+
000139 9009      	LD   R0,Y+
00013a 9518      	RETI
                 ;
                 ;// Active cruise control mode
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 0043 {
                 _ext_int0_isr:
00013b 920a      	ST   -Y,R0
00013c 93ea      	ST   -Y,R30
00013d 93fa      	ST   -Y,R31
00013e b7ef      	IN   R30,SREG
00013f 93ea      	ST   -Y,R30
                 ; 0000 0044      if(dem == 0)
000140 2c05      	MOV  R0,R5
000141 2806      	OR   R0,R6
000142 f419      	BRNE _0x10
                 ; 0000 0045      {
                 ; 0000 0046           mode = 'c';
000143 e6e3      	LDI  R30,LOW(99)
000144 2e4e      	MOV  R4,R30
                 ; 0000 0047      }
                 ; 0000 0048      else
000145 c004      	RJMP _0x11
                 _0x10:
                 ; 0000 0049      {
                 ; 0000 004A           mode = 'n';
000146 e6ee      	LDI  R30,LOW(110)
000147 2e4e      	MOV  R4,R30
                 ; 0000 004B           status = 'i';
000148 e6e9      	LDI  R30,LOW(105)
000149 2e3e      	MOV  R3,R30
                 ; 0000 004C      }
                 _0x11:
                 ; 0000 004D      dem++;
00014a e0e1      	LDI  R30,LOW(1)
00014b e0f0      	LDI  R31,HIGH(1)
                +
00014c 0e5e     +ADD R5 , R30
00014d 1e6f     +ADC R6 , R31
                 	__ADDWRR 5,6,30,31
                 ; 0000 004E      if(dem == 2)
00014e e0e2      	LDI  R30,LOW(2)
00014f e0f0      	LDI  R31,HIGH(2)
000150 15e5      	CP   R30,R5
000151 05f6      	CPC  R31,R6
000152 f411      	BRNE _0x12
                 ; 0000 004F      {
                 ; 0000 0050           dem = 0;
000153 2455      	CLR  R5
000154 2466      	CLR  R6
                 ; 0000 0051      }
                 ; 0000 0052 }
                 _0x12:
000155 91e9      	LD   R30,Y+
000156 bfef      	OUT  SREG,R30
000157 91f9      	LD   R31,Y+
000158 91e9      	LD   R30,Y+
000159 9009      	LD   R0,Y+
00015a 9518      	RETI
                 ;
                 ;// Active adaptive cruise control mode
                 ;interrupt [EXT_INT1] void ext_int1_isr(void)
                 ; 0000 0056 {
                 _ext_int1_isr:
00015b 93ea      	ST   -Y,R30
00015c 93fa      	ST   -Y,R31
00015d b7ef      	IN   R30,SREG
00015e 93ea      	ST   -Y,R30
                 ; 0000 0057     if(mode == 'c' && status != 'i')
00015f e6e3      	LDI  R30,LOW(99)
000160 15e4      	CP   R30,R4
000161 f419      	BRNE _0x14
000162 e6e9      	LDI  R30,LOW(105)
000163 15e3      	CP   R30,R3
000164 f409      	BRNE _0x15
                 _0x14:
000165 c002      	RJMP _0x13
                 _0x15:
                 ; 0000 0058     {
                 ; 0000 0059         mode = 'a';
000166 e6e1      	LDI  R30,LOW(97)
000167 2e4e      	MOV  R4,R30
                 ; 0000 005A     }
                 ; 0000 005B     gapLevel++;
                 _0x13:
000168 e0e1      	LDI  R30,LOW(1)
000169 e0f0      	LDI  R31,HIGH(1)
                +
00016a 0e7e     +ADD R7 , R30
00016b 1e8f     +ADC R8 , R31
                 	__ADDWRR 7,8,30,31
                 ; 0000 005C     if(gapLevel == 4)
00016c e0e4      	LDI  R30,LOW(4)
00016d e0f0      	LDI  R31,HIGH(4)
00016e 15e7      	CP   R30,R7
00016f 05f8      	CPC  R31,R8
000170 f421      	BRNE _0x16
                 ; 0000 005D     {
                 ; 0000 005E         gapLevel = 0;
000171 2477      	CLR  R7
000172 2488      	CLR  R8
                 ; 0000 005F         mode = 'c';
000173 e6e3      	LDI  R30,LOW(99)
000174 2e4e      	MOV  R4,R30
                 ; 0000 0060     }
                 ; 0000 0061 }
                 _0x16:
                 _0xA8:
000175 91e9      	LD   R30,Y+
000176 bfef      	OUT  SREG,R30
000177 91f9      	LD   R31,Y+
000178 91e9      	LD   R30,Y+
000179 9518      	RETI
                 ;
                 ;void activeRadar()
                 ; 0000 0064 {
                 _activeRadar:
                 ; 0000 0065     unsigned int duration;
                 ; 0000 0066     // Trigger generate pulse
                 ; 0000 0067     TRIGGER_PORT = 1;
00017a 931a      	ST   -Y,R17
00017b 930a      	ST   -Y,R16
                 ;	duration -> R16,R17
00017c 9a29      	SBI  0x5,1
                 ; 0000 0068     delay_us(10);
                +
00017d e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00017e 958a     +DEC R24
00017f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0069     TRIGGER_PORT = 0;
000180 9829      	CBI  0x5,1
                 ; 0000 006A     // Delete timer1
                 ; 0000 006B     TCNT1H = 0;
000181 940e 095a 	CALL SUBOPT_0x5
                 ; 0000 006C     TCNT1L = 0;
                 ; 0000 006D     TCCR1B=0b01000001; // Catch rising edge mode
000183 e4e1      	LDI  R30,LOW(65)
000184 93e0 0081 	STS  129,R30
                 ; 0000 006E     TIFR1 = 0b00100001; // Delete input capture and overflow flag
000186 e2e1      	LDI  R30,LOW(33)
000187 bbe6      	OUT  0x16,R30
                 ; 0000 006F 
                 ; 0000 0070     // Compute pulse width
                 ; 0000 0071     while(TIFR1 & (1 << ICF1) == 0); // Waiting rising edge
                 _0x1B:
000188 b3e6      	IN   R30,0x16
000189 70e0      	ANDI R30,LOW(0x0)
00018a f7e9      	BRNE _0x1B
                 ; 0000 0072     // Delete timer1
                 ; 0000 0073     TCNT1H = 0;
00018b 940e 095a 	CALL SUBOPT_0x5
                 ; 0000 0074     TCNT1L = 0;
                 ; 0000 0075     TCCR1B=0b00000001; // Catch falling edge mode
00018d e0e1      	LDI  R30,LOW(1)
00018e 93e0 0081 	STS  129,R30
                 ; 0000 0076     TIFR1 = 0b00100001; // Delete input capture and overflow flag
000190 e2e1      	LDI  R30,LOW(33)
000191 bbe6      	OUT  0x16,R30
                 ; 0000 0077     timerOverFlow = 0; // Delete timer1 value
000192 24dd      	CLR  R13
000193 24ee      	CLR  R14
                 ; 0000 0078 
                 ; 0000 0079     while(TIFR1 & (1 << ICF1) == 0); // Waiting falling edge
                 _0x1E:
000194 b3e6      	IN   R30,0x16
000195 70e0      	ANDI R30,LOW(0x0)
000196 f7e9      	BRNE _0x1E
                 ; 0000 007A     duration = (ICR1L + ICR1H*256) + (65535 * timerOverFlow);
000197 91e0 0086 	LDS  R30,134
000199 e0f0      	LDI  R31,0
00019a 01df      	MOVW R26,R30
00019b 91e0 0087 	LDS  R30,135
00019d 2ffe      	MOV  R31,R30
00019e e0e0      	LDI  R30,0
00019f 0fea      	ADD  R30,R26
0001a0 1ffb      	ADC  R31,R27
0001a1 01bf      	MOVW R22,R30
                +
0001a2 2ded     +MOV R30 , R13
0001a3 2dfe     +MOV R31 , R14
                 	__GETW1R 13,14
0001a4 efaf      	LDI  R26,LOW(65535)
0001a5 efbf      	LDI  R27,HIGH(65535)
0001a6 940e 0c91 	CALL __MULW12U
0001a8 0fe6      	ADD  R30,R22
0001a9 1ff7      	ADC  R31,R23
0001aa 018f      	MOVW R16,R30
                 ; 0000 007B     distance = 1.0f*duration/466.47;
0001ab 01f8      	MOVW R30,R16
0001ac 2766      	CLR  R22
0001ad 2777      	CLR  R23
0001ae 940e 0b38 	CALL __CDF1
                +
0001b0 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0001b1 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0001b2 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0001b3 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0001b4 940e 0bc2 	CALL __MULF12
0001b6 01df      	MOVW R26,R30
0001b7 01cb      	MOVW R24,R22
                +
0001b8 e2e9     +LDI R30 , LOW ( 0x43E93C29 )
0001b9 e3fc     +LDI R31 , HIGH ( 0x43E93C29 )
0001ba ee69     +LDI R22 , BYTE3 ( 0x43E93C29 )
0001bb e473     +LDI R23 , BYTE4 ( 0x43E93C29 )
                 	__GETD1N 0x43E93C29
0001bc 940e 0c10 	CALL __DIVF21
0001be 93e0 0358 	STS  _distance,R30
0001c0 93f0 0359 	STS  _distance+1,R31
0001c2 9360 035a 	STS  _distance+2,R22
0001c4 9370 035b 	STS  _distance+3,R23
                 ; 0000 007C }
0001c6 9109      	LD   R16,Y+
0001c7 9119      	LD   R17,Y+
0001c8 9508      	RET
                 ;
                 ;void showLCD(unsigned int speed)
                 ; 0000 007F {
                 _showLCD:
                 ; 0000 0080     char buffer[16], buffer1[16];
                 ; 0000 0081     lcd_clear();
0001c9 97a0      	SBIW R28,32
                 ;	speed -> Y+32
                 ;	buffer -> Y+16
                 ;	buffer1 -> Y+0
0001ca 940e 045a 	CALL _lcd_clear
                 ; 0000 0082     sprintf(buffer, "SPD: %d km/h", speed);
0001cc 01fe      	MOVW R30,R28
0001cd 9670      	ADIW R30,16
0001ce 93fa      	ST   -Y,R31
0001cf 93ea      	ST   -Y,R30
                +
0001d0 e7e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0001d1 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0001d2 93fa      	ST   -Y,R31
0001d3 93ea      	ST   -Y,R30
0001d4 a1ec      	LDD  R30,Y+36
0001d5 a1fd      	LDD  R31,Y+36+1
0001d6 2766      	CLR  R22
0001d7 2777      	CLR  R23
0001d8 940e 0960 	CALL SUBOPT_0x6
                 ; 0000 0083     lcd_gotoxy(0,0);
0001da e0e0      	LDI  R30,LOW(0)
0001db 93ea      	ST   -Y,R30
0001dc 93ea      	ST   -Y,R30
0001dd 940e 0449 	CALL _lcd_gotoxy
                 ; 0000 0084     lcd_puts(buffer);
0001df 01fe      	MOVW R30,R28
0001e0 9670      	ADIW R30,16
0001e1 940e 0967 	CALL SUBOPT_0x7
                 ; 0000 0085 
                 ; 0000 0086     if(mode == 'a')
0001e3 e6e1      	LDI  R30,LOW(97)
0001e4 15e4      	CP   R30,R4
0001e5 f011      	BREQ PC+3
0001e6 940c 022a 	JMP _0x21
                 ; 0000 0087     {
                 ; 0000 0088         lcd_gotoxy(0,1);
0001e8 940e 096b 	CALL SUBOPT_0x8
                 ; 0000 0089         lcd_puts("MODE: ACC");
                +
0001ea e0e0     +LDI R30 , LOW ( _0x22 + ( 0 ) )
0001eb e0f3     +LDI R31 , HIGH ( _0x22 + ( 0 ) )
                 	__POINTW1MN _0x22,0
0001ec 940e 0967 	CALL SUBOPT_0x7
                 ; 0000 008A         lcd_gotoxy(0,2);
0001ee 940e 0971 	CALL SUBOPT_0x9
                 ; 0000 008B         lcd_puts("GAP: ");
                +
0001f0 e0ea     +LDI R30 , LOW ( _0x22 + ( 10 ) )
0001f1 e0f3     +LDI R31 , HIGH ( _0x22 + ( 10 ) )
                 	__POINTW1MN _0x22,10
0001f2 940e 0967 	CALL SUBOPT_0x7
                 ; 0000 008C         if(gapLevel == 1)
0001f4 e0e1      	LDI  R30,LOW(1)
0001f5 e0f0      	LDI  R31,HIGH(1)
0001f6 15e7      	CP   R30,R7
0001f7 05f8      	CPC  R31,R8
0001f8 f429      	BRNE _0x23
                 ; 0000 008D         {
                 ; 0000 008E             lcd_putchar('|');
0001f9 e7ec      	LDI  R30,LOW(124)
0001fa 93ea      	ST   -Y,R30
0001fb 940e 0469 	CALL _lcd_putchar
                 ; 0000 008F         }
                 ; 0000 0090         else if(gapLevel == 2)
0001fd c013      	RJMP _0x24
                 _0x23:
0001fe e0e2      	LDI  R30,LOW(2)
0001ff e0f0      	LDI  R31,HIGH(2)
000200 15e7      	CP   R30,R7
000201 05f8      	CPC  R31,R8
000202 f419      	BRNE _0x25
                 ; 0000 0091         {
                 ; 0000 0092             lcd_puts("||");
                +
000203 e1e0     +LDI R30 , LOW ( _0x22 + ( 16 ) )
000204 e0f3     +LDI R31 , HIGH ( _0x22 + ( 16 ) )
                 	__POINTW1MN _0x22,16
000205 c007      	RJMP _0xA3
                 ; 0000 0093         }
                 ; 0000 0094         else if(gapLevel == 3)
                 _0x25:
000206 e0e3      	LDI  R30,LOW(3)
000207 e0f0      	LDI  R31,HIGH(3)
000208 15e7      	CP   R30,R7
000209 05f8      	CPC  R31,R8
00020a f431      	BRNE _0x27
                 ; 0000 0095         {
                 ; 0000 0096             lcd_puts("|||");
                +
00020b e1e3     +LDI R30 , LOW ( _0x22 + ( 19 ) )
00020c e0f3     +LDI R31 , HIGH ( _0x22 + ( 19 ) )
                 	__POINTW1MN _0x22,19
                 _0xA3:
00020d 93fa      	ST   -Y,R31
00020e 93ea      	ST   -Y,R30
00020f 940e 048a 	CALL _lcd_puts
                 ; 0000 0097         }
                 ; 0000 0098         lcd_gotoxy(0,3);
                 _0x27:
                 _0x24:
000211 e0e0      	LDI  R30,LOW(0)
000212 93ea      	ST   -Y,R30
000213 e0e3      	LDI  R30,LOW(3)
000214 93ea      	ST   -Y,R30
000215 940e 0449 	CALL _lcd_gotoxy
                 ; 0000 0099         sprintf(buffer1, "DIS: %0.2f m", distance);
000217 01fe      	MOVW R30,R28
000218 93fa      	ST   -Y,R31
000219 93ea      	ST   -Y,R30
                +
00021a e9e8     +LDI R30 , LOW ( 2 * _0x0 + ( 36 ) )
00021b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 36 ) )
                 	__POINTW1FN _0x0,36
00021c 93fa      	ST   -Y,R31
00021d 93ea      	ST   -Y,R30
00021e 91e0 0358 	LDS  R30,_distance
000220 91f0 0359 	LDS  R31,_distance+1
000222 9160 035a 	LDS  R22,_distance+2
000224 9170 035b 	LDS  R23,_distance+3
000226 940e 0960 	CALL SUBOPT_0x6
                 ; 0000 009A         lcd_puts(buffer1);
000228 01fe      	MOVW R30,R28
000229 c022      	RJMP _0xA4
                 ; 0000 009B     }
                 ; 0000 009C     else if(mode == 'c')
                 _0x21:
00022a e6e3      	LDI  R30,LOW(99)
00022b 15e4      	CP   R30,R4
00022c f4d9      	BRNE _0x29
                 ; 0000 009D     {
                 ; 0000 009E         lcd_gotoxy(0,1);
00022d 940e 096b 	CALL SUBOPT_0x8
                 ; 0000 009F         lcd_puts("MODE: CC");
                +
00022f e1e7     +LDI R30 , LOW ( _0x22 + ( 23 ) )
000230 e0f3     +LDI R31 , HIGH ( _0x22 + ( 23 ) )
                 	__POINTW1MN _0x22,23
000231 940e 0967 	CALL SUBOPT_0x7
                 ; 0000 00A0         lcd_gotoxy(0,2);
000233 940e 0971 	CALL SUBOPT_0x9
                 ; 0000 00A1         if(status == 'i')
000235 e6e9      	LDI  R30,LOW(105)
000236 15e3      	CP   R30,R3
000237 f419      	BRNE _0x2A
                 ; 0000 00A2         {
                 ; 0000 00A3             lcd_puts("SET TO ACTIVE");
                +
000238 e2e0     +LDI R30 , LOW ( _0x22 + ( 32 ) )
000239 e0f3     +LDI R31 , HIGH ( _0x22 + ( 32 ) )
                 	__POINTW1MN _0x22,32
00023a c008      	RJMP _0xA5
                 ; 0000 00A4         }
                 ; 0000 00A5         else if(status == 'w')
                 _0x2A:
00023b e7e7      	LDI  R30,LOW(119)
00023c 15e3      	CP   R30,R3
00023d f419      	BRNE _0x2C
                 ; 0000 00A6         {
                 ; 0000 00A7             lcd_puts("STATUS: PAUSE");
                +
00023e e2ee     +LDI R30 , LOW ( _0x22 + ( 46 ) )
00023f e0f3     +LDI R31 , HIGH ( _0x22 + ( 46 ) )
                 	__POINTW1MN _0x22,46
000240 c002      	RJMP _0xA5
                 ; 0000 00A8         }
                 ; 0000 00A9         else
                 _0x2C:
                 ; 0000 00AA         {
                 ; 0000 00AB             lcd_puts("STATUS: ACTIVE");
                +
000241 e3ec     +LDI R30 , LOW ( _0x22 + ( 60 ) )
000242 e0f3     +LDI R31 , HIGH ( _0x22 + ( 60 ) )
                 	__POINTW1MN _0x22,60
                 _0xA5:
000243 93fa      	ST   -Y,R31
000244 93ea      	ST   -Y,R30
000245 940e 048a 	CALL _lcd_puts
                 ; 0000 00AC         }
                 ; 0000 00AD     }
                 ; 0000 00AE     else
000247 c008      	RJMP _0x2E
                 _0x29:
                 ; 0000 00AF     {
                 ; 0000 00B0         lcd_gotoxy(0,1);
000248 940e 096b 	CALL SUBOPT_0x8
                 ; 0000 00B1         lcd_puts("MODE: NORMAL");
                +
00024a e4eb     +LDI R30 , LOW ( _0x22 + ( 75 ) )
00024b e0f3     +LDI R31 , HIGH ( _0x22 + ( 75 ) )
                 	__POINTW1MN _0x22,75
                 _0xA4:
00024c 93fa      	ST   -Y,R31
00024d 93ea      	ST   -Y,R30
00024e 940e 048a 	CALL _lcd_puts
                 ; 0000 00B2     }
                 _0x2E:
                 ; 0000 00B3 }
000250 96a2      	ADIW R28,34
000251 9508      	RET
                 
                 	.DSEG
                 _0x22:
000300           	.BYTE 0x58
                 ;
                 ;void normalMode()
                 ; 0000 00B6 {
                 
                 	.CSEG
                 _normalMode:
                 ; 0000 00B7     if(GAS_PEDAL == ON && speed < 200)
000252 e0a0      	LDI  R26,0
000253 9930      	SBIC 0x6,0
000254 e0a1      	LDI  R26,1
000255 30a0      	CPI  R26,LOW(0x0)
000256 f419      	BRNE _0x30
000257 940e 0977 	CALL SUBOPT_0xA
000259 f008      	BRLO _0x31
                 _0x30:
00025a c00d      	RJMP _0x2F
                 _0x31:
                 ; 0000 00B8     {
                 ; 0000 00B9         if(speed < 30)
00025b e1ee      	LDI  R30,LOW(30)
00025c e0f0      	LDI  R31,HIGH(30)
00025d 169e      	CP   R9,R30
00025e 06af      	CPC  R10,R31
00025f f418      	BRSH _0x32
                 ; 0000 00BA         {
                 ; 0000 00BB             speed+=2;
000260 e0e2      	LDI  R30,LOW(2)
000261 e0f0      	LDI  R31,HIGH(2)
000262 c002      	RJMP _0xA6
                 ; 0000 00BC         }
                 ; 0000 00BD         else
                 _0x32:
                 ; 0000 00BE         {
                 ; 0000 00BF             speed++;
000263 e0e1      	LDI  R30,LOW(1)
000264 e0f0      	LDI  R31,HIGH(1)
                 _0xA6:
                +
000265 0e9e     +ADD R9 , R30
000266 1eaf     +ADC R10 , R31
                 	__ADDWRR 9,10,30,31
                 ; 0000 00C0         }
                 ; 0000 00C1     }
                 ; 0000 00C2     else if(BRAKE_PEDAL == ON && speed > 0)
000267 c03d      	RJMP _0x34
                 _0x2F:
000268 940e 097c 	CALL SUBOPT_0xB
00026a f421      	BRNE _0x36
00026b 2400      	CLR  R0
00026c 1409      	CP   R0,R9
00026d 040a      	CPC  R0,R10
00026e f008      	BRLO _0x37
                 _0x36:
00026f c02d      	RJMP _0x35
                 _0x37:
                 ; 0000 00C3     {
                 ; 0000 00C4         if(speed > 120)
000270 e7e8      	LDI  R30,LOW(120)
000271 e0f0      	LDI  R31,HIGH(120)
000272 15e9      	CP   R30,R9
000273 05fa      	CPC  R31,R10
000274 f420      	BRSH _0x38
                 ; 0000 00C5         {
                 ; 0000 00C6             speed-=20;
                +
000275 2de9     +MOV R30 , R9
000276 2dfa     +MOV R31 , R10
                 	__GETW1R 9,10
000277 9774      	SBIW R30,20
000278 c021      	RJMP _0xA7
                 ; 0000 00C7         }
                 ; 0000 00C8         else if(speed > 80 && speed < 120)
                 _0x38:
000279 e5e0      	LDI  R30,LOW(80)
00027a e0f0      	LDI  R31,HIGH(80)
00027b 15e9      	CP   R30,R9
00027c 05fa      	CPC  R31,R10
00027d f428      	BRSH _0x3B
00027e e7e8      	LDI  R30,LOW(120)
00027f e0f0      	LDI  R31,HIGH(120)
000280 169e      	CP   R9,R30
000281 06af      	CPC  R10,R31
000282 f008      	BRLO _0x3C
                 _0x3B:
000283 c004      	RJMP _0x3A
                 _0x3C:
                 ; 0000 00C9         {
                 ; 0000 00CA             speed-=10;
                +
000284 2de9     +MOV R30 , R9
000285 2dfa     +MOV R31 , R10
                 	__GETW1R 9,10
000286 973a      	SBIW R30,10
000287 c012      	RJMP _0xA7
                 ; 0000 00CB         }
                 ; 0000 00CC         else if(speed > 20 && speed < 80)
                 _0x3A:
000288 e1e4      	LDI  R30,LOW(20)
000289 e0f0      	LDI  R31,HIGH(20)
00028a 15e9      	CP   R30,R9
00028b 05fa      	CPC  R31,R10
00028c f428      	BRSH _0x3F
00028d e5e0      	LDI  R30,LOW(80)
00028e e0f0      	LDI  R31,HIGH(80)
00028f 169e      	CP   R9,R30
000290 06af      	CPC  R10,R31
000291 f008      	BRLO _0x40
                 _0x3F:
000292 c004      	RJMP _0x3E
                 _0x40:
                 ; 0000 00CD         {
                 ; 0000 00CE             speed-=5;
                +
000293 2de9     +MOV R30 , R9
000294 2dfa     +MOV R31 , R10
                 	__GETW1R 9,10
000295 9735      	SBIW R30,5
000296 c003      	RJMP _0xA7
                 ; 0000 00CF         }
                 ; 0000 00D0         else
                 _0x3E:
                 ; 0000 00D1         {
                 ; 0000 00D2             speed--;
                +
000297 2de9     +MOV R30 , R9
000298 2dfa     +MOV R31 , R10
                 	__GETW1R 9,10
000299 9731      	SBIW R30,1
                 _0xA7:
                +
00029a 2e9e     +MOV R9 , R30
00029b 2eaf     +MOV R10 , R31
                 	__PUTW1R 9,10
                 ; 0000 00D3         }
                 ; 0000 00D4     }
                 ; 0000 00D5     else
00029c c008      	RJMP _0x42
                 _0x35:
                 ; 0000 00D6     {
                 ; 0000 00D7         if(speed > 0)
00029d 2400      	CLR  R0
00029e 1409      	CP   R0,R9
00029f 040a      	CPC  R0,R10
0002a0 f420      	BRSH _0x43
                 ; 0000 00D8         {
                 ; 0000 00D9             speed--;
0002a1 940e 0981 	CALL SUBOPT_0xC
                 ; 0000 00DA             delay_ms(1000);
0002a3 940e 0987 	CALL SUBOPT_0xD
                 ; 0000 00DB         }
                 ; 0000 00DC     }
                 _0x43:
                 _0x42:
                 _0x34:
                 ; 0000 00DD     showLCD(speed);
0002a5 940e 0940 	CALL SUBOPT_0x1
                 ; 0000 00DE     wheelAndThrottleControl();
0002a7 940e 093c 	CALL SUBOPT_0x0
                 ; 0000 00DF     brakeLightControl();
                 ; 0000 00E0     delay_ms(200);
0002a9 940e 0944 	CALL SUBOPT_0x2
                 ; 0000 00E1 }
0002ab 9508      	RET
                 ;
                 ;void reIncre()
                 ; 0000 00E4 {
                 _reIncre:
                 ; 0000 00E5     while(speed != speedTemp)
                 _0x44:
                +
0002ac 14b9     +CP R11 , R9
0002ad 04ca     +CPC R12 , R10
                 	__CPWRR 11,12,9,10
0002ae f119      	BREQ _0x46
                 ; 0000 00E6     {
                 ; 0000 00E7         if(speed > speedTemp)
                +
0002af 14b9     +CP R11 , R9
0002b0 04ca     +CPC R12 , R10
                 	__CPWRR 11,12,9,10
0002b1 f480      	BRSH _0x47
                 ; 0000 00E8         {
                 ; 0000 00E9             speed--;
0002b2 940e 0981 	CALL SUBOPT_0xC
                 ; 0000 00EA             delay_ms(500);
0002b4 940e 098d 	CALL SUBOPT_0xE
                 ; 0000 00EB             wheelAndThrottleControl();
                 ; 0000 00EC             brakeLightControl();
                 ; 0000 00ED             showLCD(speed);
0002b6 940e 0940 	CALL SUBOPT_0x1
                 ; 0000 00EE             if(CANCEL_BTN == ON || BRAKE_PEDAL == ON)
0002b8 940e 0994 	CALL SUBOPT_0xF
0002ba f019      	BREQ _0x49
0002bb 940e 097c 	CALL SUBOPT_0xB
0002bd f419      	BRNE _0x48
                 _0x49:
                 ; 0000 00EF             {
                 ; 0000 00F0                 status = 'w';
0002be e7e7      	LDI  R30,LOW(119)
0002bf 2e3e      	MOV  R3,R30
                 ; 0000 00F1                 break;
0002c0 c011      	RJMP _0x46
                 ; 0000 00F2             }
                 ; 0000 00F3         }
                 _0x48:
                 ; 0000 00F4         else
0002c1 c00f      	RJMP _0x4B
                 _0x47:
                 ; 0000 00F5         {
                 ; 0000 00F6             speed++;
0002c2 940e 0999 	CALL SUBOPT_0x10
                 ; 0000 00F7             delay_ms(500);
0002c4 940e 098d 	CALL SUBOPT_0xE
                 ; 0000 00F8             wheelAndThrottleControl();
                 ; 0000 00F9             brakeLightControl();
                 ; 0000 00FA             showLCD(speed);
0002c6 940e 0940 	CALL SUBOPT_0x1
                 ; 0000 00FB             if(CANCEL_BTN == ON || BRAKE_PEDAL == ON)
0002c8 940e 0994 	CALL SUBOPT_0xF
0002ca f019      	BREQ _0x4D
0002cb 940e 097c 	CALL SUBOPT_0xB
0002cd f419      	BRNE _0x4C
                 _0x4D:
                 ; 0000 00FC             {
                 ; 0000 00FD                 status = 'w';
0002ce e7e7      	LDI  R30,LOW(119)
0002cf 2e3e      	MOV  R3,R30
                 ; 0000 00FE                 break;
0002d0 c001      	RJMP _0x46
                 ; 0000 00FF             }
                 ; 0000 0100         }
                 _0x4C:
                 _0x4B:
                 ; 0000 0101     }
0002d1 cfda      	RJMP _0x44
                 _0x46:
                 ; 0000 0102 }
0002d2 9508      	RET
                 ;
                 ;void cruiseControlMode()
                 ; 0000 0105 {
                 _cruiseControlMode:
                 ; 0000 0106     // This mode initially operate same as normal mode
                 ; 0000 0107     if(status == 'i')
0002d3 e6e9      	LDI  R30,LOW(105)
0002d4 15e3      	CP   R30,R3
0002d5 f409      	BRNE _0x4F
                 ; 0000 0108     {
                 ; 0000 0109         normalMode();
0002d6 df7b      	RCALL _normalMode
                 ; 0000 010A     }
                 ; 0000 010B     // When set button is pressed speed is locked, +/-/cancel buttons are actived
                 ; 0000 010C     if(status == 's')
                 _0x4F:
0002d7 e7e3      	LDI  R30,LOW(115)
0002d8 15e3      	CP   R30,R3
0002d9 f011      	BREQ PC+3
0002da 940c 0344 	JMP _0x50
                 ; 0000 010D     {
                 ; 0000 010E         int i;
                 ; 0000 010F         if(RES_BTN == ON)
0002dc 9722      	SBIW R28,2
                 ;	i -> Y+0
0002dd 9932      	SBIC 0x6,2
0002de c029      	RJMP _0x51
                 ; 0000 0110         {
                 ; 0000 0111             if((200 - speed) >= 5)
0002df ece8      	LDI  R30,LOW(200)
0002e0 e0f0      	LDI  R31,HIGH(200)
0002e1 19e9      	SUB  R30,R9
0002e2 09fa      	SBC  R31,R10
0002e3 9735      	SBIW R30,5
0002e4 f0b0      	BRLO _0x52
                 ; 0000 0112             {
                 ; 0000 0113                 for(i = 0; i < 5; i++)
0002e5 e0e0      	LDI  R30,LOW(0)
0002e6 83e8      	STD  Y+0,R30
0002e7 83e9      	STD  Y+0+1,R30
                 _0x54:
0002e8 81a8      	LD   R26,Y
0002e9 81b9      	LDD  R27,Y+1
0002ea 9715      	SBIW R26,5
0002eb f474      	BRGE _0x55
                 ; 0000 0114                 {
                 ; 0000 0115                     speed++;
0002ec 940e 0999 	CALL SUBOPT_0x10
                 ; 0000 0116                     delay_ms(400);
0002ee 940e 099e 	CALL SUBOPT_0x11
                 ; 0000 0117                     wheelAndThrottleControl();
                 ; 0000 0118                     brakeLightControl();
                 ; 0000 0119                     showLCD(speed);
0002f0 940e 0940 	CALL SUBOPT_0x1
                 ; 0000 011A                     speedTemp = speed;
                +
0002f2 2cb9     +MOV R11 , R9
0002f3 2cca     +MOV R12 , R10
                 	__MOVEWRR 11,12,9,10
                 ; 0000 011B                 }
0002f4 81e8      	LD   R30,Y
0002f5 81f9      	LDD  R31,Y+1
0002f6 9631      	ADIW R30,1
0002f7 83e8      	ST   Y,R30
0002f8 83f9      	STD  Y+1,R31
0002f9 cfee      	RJMP _0x54
                 _0x55:
                 ; 0000 011C             }
                 ; 0000 011D             else
0002fa c00c      	RJMP _0x56
                 _0x52:
                 ; 0000 011E             {
                 ; 0000 011F                 while(speed < 200)
                 _0x57:
0002fb 940e 0977 	CALL SUBOPT_0xA
0002fd f448      	BRSH _0x59
                 ; 0000 0120                 {
                 ; 0000 0121                     speed++;
0002fe 940e 0999 	CALL SUBOPT_0x10
                 ; 0000 0122                     delay_ms(400);
000300 940e 099e 	CALL SUBOPT_0x11
                 ; 0000 0123                     wheelAndThrottleControl();
                 ; 0000 0124                     brakeLightControl();
                 ; 0000 0125                     showLCD(speed);
000302 940e 0940 	CALL SUBOPT_0x1
                 ; 0000 0126                     speedTemp = speed;
                +
000304 2cb9     +MOV R11 , R9
000305 2cca     +MOV R12 , R10
                 	__MOVEWRR 11,12,9,10
                 ; 0000 0127                 }
000306 cff4      	RJMP _0x57
                 _0x59:
                 ; 0000 0128             }
                 _0x56:
                 ; 0000 0129         }
                 ; 0000 012A         else if(SET_BTN == ON)
000307 c03b      	RJMP _0x5A
                 _0x51:
000308 9934      	SBIC 0x6,4
000309 c02a      	RJMP _0x5B
                 ; 0000 012B         {
                 ; 0000 012C             if((speed - 5) >= 45)
                +
00030a 2da9     +MOV R26 , R9
00030b 2dba     +MOV R27 , R10
                 	__GETW2R 9,10
00030c 9715      	SBIW R26,5
00030d 979d      	SBIW R26,45
00030e f0b0      	BRLO _0x5C
                 ; 0000 012D             {
                 ; 0000 012E                 for(i = 0; i < 5; i++)
00030f e0e0      	LDI  R30,LOW(0)
000310 83e8      	STD  Y+0,R30
000311 83e9      	STD  Y+0+1,R30
                 _0x5E:
000312 81a8      	LD   R26,Y
000313 81b9      	LDD  R27,Y+1
000314 9715      	SBIW R26,5
000315 f474      	BRGE _0x5F
                 ; 0000 012F                 {
                 ; 0000 0130                     speed--;
000316 940e 0981 	CALL SUBOPT_0xC
                 ; 0000 0131                     delay_ms(600);
000318 940e 09a5 	CALL SUBOPT_0x12
                 ; 0000 0132                     wheelAndThrottleControl();
                 ; 0000 0133                     brakeLightControl();
                 ; 0000 0134                     showLCD(speed);
00031a 940e 0940 	CALL SUBOPT_0x1
                 ; 0000 0135                     speedTemp = speed;
                +
00031c 2cb9     +MOV R11 , R9
00031d 2cca     +MOV R12 , R10
                 	__MOVEWRR 11,12,9,10
                 ; 0000 0136                 }
00031e 81e8      	LD   R30,Y
00031f 81f9      	LDD  R31,Y+1
000320 9631      	ADIW R30,1
000321 83e8      	ST   Y,R30
000322 83f9      	STD  Y+1,R31
000323 cfee      	RJMP _0x5E
                 _0x5F:
                 ; 0000 0137             }
                 ; 0000 0138             else
000324 c00e      	RJMP _0x60
                 _0x5C:
                 ; 0000 0139             {
                 ; 0000 013A                 while(speed > 45)
                 _0x61:
000325 e2ed      	LDI  R30,LOW(45)
000326 e0f0      	LDI  R31,HIGH(45)
000327 15e9      	CP   R30,R9
000328 05fa      	CPC  R31,R10
000329 f448      	BRSH _0x63
                 ; 0000 013B                 {
                 ; 0000 013C                     speed--;
00032a 940e 0981 	CALL SUBOPT_0xC
                 ; 0000 013D                     delay_ms(600);
00032c 940e 09a5 	CALL SUBOPT_0x12
                 ; 0000 013E                     wheelAndThrottleControl();
                 ; 0000 013F                     brakeLightControl();
                 ; 0000 0140                     showLCD(speed);
00032e 940e 0940 	CALL SUBOPT_0x1
                 ; 0000 0141                     speedTemp = speed;
                +
000330 2cb9     +MOV R11 , R9
000331 2cca     +MOV R12 , R10
                 	__MOVEWRR 11,12,9,10
                 ; 0000 0142                 }
000332 cff2      	RJMP _0x61
                 _0x63:
                 ; 0000 0143             }
                 _0x60:
                 ; 0000 0144         }
                 ; 0000 0145         else if(CANCEL_BTN == ON || BRAKE_PEDAL == ON)
000333 c00f      	RJMP _0x64
                 _0x5B:
000334 940e 0994 	CALL SUBOPT_0xF
000336 f019      	BREQ _0x66
000337 940e 097c 	CALL SUBOPT_0xB
000339 f419      	BRNE _0x65
                 _0x66:
                 ; 0000 0146         {
                 ; 0000 0147             status = 'w';
00033a e7e7      	LDI  R30,LOW(119)
00033b 2e3e      	MOV  R3,R30
                 ; 0000 0148         }
                 ; 0000 0149         else
00033c c006      	RJMP _0x68
                 _0x65:
                 ; 0000 014A         {
                 ; 0000 014B             wheelAndThrottleControl();
00033d 940e 093c 	CALL SUBOPT_0x0
                 ; 0000 014C             brakeLightControl();
                 ; 0000 014D             showLCD(speed);
00033f 940e 0940 	CALL SUBOPT_0x1
                 ; 0000 014E             delay_ms(200);
000341 940e 0944 	CALL SUBOPT_0x2
                 ; 0000 014F         }
                 _0x68:
                 _0x64:
                 _0x5A:
                 ; 0000 0150     }
000343 9622      	ADIW R28,2
                 ; 0000 0151     // The mode will be paused and operated as normal mode when cancel button or brake pedal is pressed
                 ; 0000 0152     if(status == 'w')
                 _0x50:
000344 e7e7      	LDI  R30,LOW(119)
000345 15e3      	CP   R30,R3
000346 f409      	BRNE _0x69
                 ; 0000 0153     {
                 ; 0000 0154         normalMode();
000347 df0a      	RCALL _normalMode
                 ; 0000 0155     }
                 ; 0000 0156 }
                 _0x69:
000348 9508      	RET
                 ;
                 ;void wheelAndThrottleControl()
                 ; 0000 0159 {
                 _wheelAndThrottleControl:
                 ; 0000 015A     if(speed == 0)
000349 2c09      	MOV  R0,R9
00034a 280a      	OR   R0,R10
00034b f419      	BRNE _0x6A
                 ; 0000 015B     {
                 ; 0000 015C         DDRD.5 = 0;
00034c 9855      	CBI  0xA,5
                 ; 0000 015D         DDRD.6 = 0;
00034d 9856      	CBI  0xA,6
                 ; 0000 015E     }
                 ; 0000 015F     else
00034e c02d      	RJMP _0x6F
                 _0x6A:
                 ; 0000 0160     {
                 ; 0000 0161         DDRD.5 = 1;
00034f 9a55      	SBI  0xA,5
                 ; 0000 0162         DDRD.6 = 1;
000350 9a56      	SBI  0xA,6
                 ; 0000 0163         OCR0B = speed*4*60/200; // Speed of wheel
                +
000351 2de9     +MOV R30 , R9
000352 2dfa     +MOV R31 , R10
                 	__GETW1R 9,10
000353 940e 0c81 	CALL __LSLW2
000355 e3ac      	LDI  R26,LOW(60)
000356 e0b0      	LDI  R27,HIGH(60)
000357 940e 0c91 	CALL __MULW12U
000359 01df      	MOVW R26,R30
00035a ece8      	LDI  R30,LOW(200)
00035b e0f0      	LDI  R31,HIGH(200)
00035c 940e 0cac 	CALL __DIVW21U
00035e bde8      	OUT  0x28,R30
                 ; 0000 0164         OCR0A = 32*(0.005*speed + 0.5) - 1; // Angle position of throttle
                +
00035f 2de9     +MOV R30 , R9
000360 2dfa     +MOV R31 , R10
                 	__GETW1R 9,10
000361 2766      	CLR  R22
000362 2777      	CLR  R23
000363 940e 0b38 	CALL __CDF1
                +
000365 e0aa     +LDI R26 , LOW ( 0x3BA3D70A )
000366 edb7     +LDI R27 , HIGH ( 0x3BA3D70A )
000367 ea83     +LDI R24 , BYTE3 ( 0x3BA3D70A )
000368 e39b     +LDI R25 , BYTE4 ( 0x3BA3D70A )
                 	__GETD2N 0x3BA3D70A
000369 940e 09ac 	CALL SUBOPT_0x13
                +
00036b e0a0     +LDI R26 , LOW ( 0x42000000 )
00036c e0b0     +LDI R27 , HIGH ( 0x42000000 )
00036d e080     +LDI R24 , BYTE3 ( 0x42000000 )
00036e e492     +LDI R25 , BYTE4 ( 0x42000000 )
                 	__GETD2N 0x42000000
00036f 940e 0bc2 	CALL __MULF12
000371 01df      	MOVW R26,R30
000372 01cb      	MOVW R24,R22
                +
000373 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000374 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000375 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000376 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000377 940e 09b5 	CALL SUBOPT_0x14
000379 940e 0aff 	CALL __CFD1U
00037b bde7      	OUT  0x27,R30
                 ; 0000 0165     }
                 _0x6F:
                 ; 0000 0166 }
00037c 9508      	RET
                 ;
                 ;void brakeLightControl()
                 ; 0000 0169 {
                 _brakeLightControl:
                 ; 0000 016A     if(BRAKE_PEDAL == ON)
00037d 9931      	SBIC 0x6,1
00037e c002      	RJMP _0x74
                 ; 0000 016B     {
                 ; 0000 016C         PORTB.2 = 1;
00037f 9a2a      	SBI  0x5,2
                 ; 0000 016D     }
                 ; 0000 016E     else
000380 c001      	RJMP _0x77
                 _0x74:
                 ; 0000 016F     {
                 ; 0000 0170         PORTB.2 = 0;
000381 982a      	CBI  0x5,2
                 ; 0000 0171     }
                 _0x77:
                 ; 0000 0172 }
000382 9508      	RET
                 ;
                 ;int getGap(unsigned int gapLevel)
                 ; 0000 0175 {
                 _getGap:
                 ; 0000 0176     if(gapLevel == 1)
                 ;	gapLevel -> Y+0
000383 81a8      	LD   R26,Y
000384 81b9      	LDD  R27,Y+1
000385 9711      	SBIW R26,1
000386 f419      	BRNE _0x7A
                 ; 0000 0177     {
                 ; 0000 0178         return 30;
000387 e1ee      	LDI  R30,LOW(30)
000388 e0f0      	LDI  R31,HIGH(30)
000389 c0ce      	RJMP _0x20C0007
                 ; 0000 0179     }
                 ; 0000 017A     else if(gapLevel == 2)
                 _0x7A:
00038a 81a8      	LD   R26,Y
00038b 81b9      	LDD  R27,Y+1
00038c 9712      	SBIW R26,2
00038d f419      	BRNE _0x7C
                 ; 0000 017B     {
                 ; 0000 017C         return 50;
00038e e3e2      	LDI  R30,LOW(50)
00038f e0f0      	LDI  R31,HIGH(50)
000390 c0c7      	RJMP _0x20C0007
                 ; 0000 017D     }
                 ; 0000 017E     else
                 _0x7C:
                 ; 0000 017F     {
                 ; 0000 0180         return 70;
000391 e4e6      	LDI  R30,LOW(70)
000392 e0f0      	LDI  R31,HIGH(70)
000393 c0c4      	RJMP _0x20C0007
                 ; 0000 0181     }
                 ; 0000 0182 }
                 ;
                 ;void keepGap()
                 ; 0000 0185 {
                 _keepGap:
                 ; 0000 0186     if(status == 's' || status == 'i')
000394 e7e3      	LDI  R30,LOW(115)
000395 15e3      	CP   R30,R3
000396 f019      	BREQ _0x7F
000397 e6e9      	LDI  R30,LOW(105)
000398 15e3      	CP   R30,R3
000399 f579      	BRNE _0x7E
                 _0x7F:
                 ; 0000 0187     {
                 ; 0000 0188         if((distance < (getGap(gapLevel) - 6)) && speed > 0)
00039a 928a      	ST   -Y,R8
00039b 927a      	ST   -Y,R7
00039c dfe6      	RCALL _getGap
00039d 9736      	SBIW R30,6
00039e 940e 09ba 	CALL SUBOPT_0x15
0003a0 f420      	BRSH _0x82
0003a1 2400      	CLR  R0
0003a2 1409      	CP   R0,R9
0003a3 040a      	CPC  R0,R10
0003a4 f008      	BRLO _0x83
                 _0x82:
0003a5 c003      	RJMP _0x81
                 _0x83:
                 ; 0000 0189         {
                 ; 0000 018A             speed--;
0003a6 940e 0981 	CALL SUBOPT_0xC
                 ; 0000 018B         }
                 ; 0000 018C         else if((distance > getGap(gapLevel) + 6) && speed < 200)
0003a8 c010      	RJMP _0x84
                 _0x81:
0003a9 928a      	ST   -Y,R8
0003aa 927a      	ST   -Y,R7
0003ab dfd7      	RCALL _getGap
0003ac 9636      	ADIW R30,6
0003ad 940e 09ba 	CALL SUBOPT_0x15
0003af f009      	BREQ PC+2
0003b0 f410      	BRCC PC+3
0003b1 940c 03b6 	JMP  _0x86
0003b3 940e 0977 	CALL SUBOPT_0xA
0003b5 f008      	BRLO _0x87
                 _0x86:
0003b6 c002      	RJMP _0x85
                 _0x87:
                 ; 0000 018D         {
                 ; 0000 018E             speed++;
0003b7 940e 0999 	CALL SUBOPT_0x10
                 ; 0000 018F         }
                 ; 0000 0190         if(CANCEL_BTN == ON || BRAKE_PEDAL == ON)
                 _0x85:
                 _0x84:
0003b9 940e 0994 	CALL SUBOPT_0xF
0003bb f019      	BREQ _0x89
0003bc 940e 097c 	CALL SUBOPT_0xB
0003be f421      	BRNE _0x88
                 _0x89:
                 ; 0000 0191         {
                 ; 0000 0192             status = 'w';
0003bf e7e7      	LDI  R30,LOW(119)
0003c0 2e3e      	MOV  R3,R30
                 ; 0000 0193             speedTemp = speed;
                +
0003c1 2cb9     +MOV R11 , R9
0003c2 2cca     +MOV R12 , R10
                 	__MOVEWRR 11,12,9,10
                 ; 0000 0194         }
                 ; 0000 0195         wheelAndThrottleControl();
                 _0x88:
0003c3 940e 093c 	CALL SUBOPT_0x0
                 ; 0000 0196         brakeLightControl();
                 ; 0000 0197         showLCD(speed);
0003c5 940e 0940 	CALL SUBOPT_0x1
                 ; 0000 0198         delay_ms(1000);
0003c7 940e 0987 	CALL SUBOPT_0xD
                 ; 0000 0199     }
                 ; 0000 019A     if(status == 'w')
                 _0x7E:
0003c9 e7e7      	LDI  R30,LOW(119)
0003ca 15e3      	CP   R30,R3
0003cb f409      	BRNE _0x8B
                 ; 0000 019B     {
                 ; 0000 019C         normalMode();
0003cc de85      	RCALL _normalMode
                 ; 0000 019D     }
                 ; 0000 019E }
                 _0x8B:
0003cd 9508      	RET
                 ;
                 ;void main(void)
                 ; 0000 01A1 {
                 _main:
                 ; 0000 01A2 
                 ; 0000 01A3 // Crystal Oscillator division factor: 1
                 ; 0000 01A4 #pragma optsize-
                 ; 0000 01A5 CLKPR=0x80;
0003ce e8e0      	LDI  R30,LOW(128)
0003cf 93e0 0061 	STS  97,R30
                 ; 0000 01A6 CLKPR=0x00;
0003d1 e0e0      	LDI  R30,LOW(0)
0003d2 93e0 0061 	STS  97,R30
                 ; 0000 01A7 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 01A8 #pragma optsize+
                 ; 0000 01A9 #endif
                 ; 0000 01AA 
                 ; 0000 01AB // Timer/Counter 0 initialization
                 ; 0000 01AC TCCR0A=0b10100011;
0003d4 eae3      	LDI  R30,LOW(163)
0003d5 bde4      	OUT  0x24,R30
                 ; 0000 01AD TCCR0B=0b00000100;
0003d6 e0e4      	LDI  R30,LOW(4)
0003d7 bde5      	OUT  0x25,R30
                 ; 0000 01AE 
                 ; 0000 01AF // Timer/Counter 1 initialization
                 ; 0000 01B0 TCCR1A=0x00; // Normal mode
0003d8 e0e0      	LDI  R30,LOW(0)
0003d9 93e0 0080 	STS  128,R30
                 ; 0000 01B1 TIMSK1=0b00000001; // Allow interrupt when timer1 overflow
0003db e0e1      	LDI  R30,LOW(1)
0003dc 93e0 006f 	STS  111,R30
                 ; 0000 01B2 
                 ; 0000 01B3 // Timer/Counter 2 initialization
                 ; 0000 01B4 TCCR2B=0b00000101;
0003de e0e5      	LDI  R30,LOW(5)
0003df 93e0 00b1 	STS  177,R30
                 ; 0000 01B5 
                 ; 0000 01B6 // External Interrupt(s) initialization
                 ; 0000 01B7 EICRA=0x0A;
0003e1 e0ea      	LDI  R30,LOW(10)
0003e2 93e0 0069 	STS  105,R30
                 ; 0000 01B8 EIMSK=0x03;
0003e4 e0e3      	LDI  R30,LOW(3)
0003e5 bbed      	OUT  0x1D,R30
                 ; 0000 01B9 EIFR=0x03;
0003e6 bbec      	OUT  0x1C,R30
                 ; 0000 01BA PCICR=0x02;
0003e7 e0e2      	LDI  R30,LOW(2)
0003e8 93e0 0068 	STS  104,R30
                 ; 0000 01BB PCMSK1=0x1F;
0003ea e1ef      	LDI  R30,LOW(31)
0003eb 93e0 006c 	STS  108,R30
                 ; 0000 01BC PCIFR=0x02;
0003ed e0e2      	LDI  R30,LOW(2)
0003ee bbeb      	OUT  0x1B,R30
                 ; 0000 01BD 
                 ; 0000 01BE // Alphanumeric LCD initialization
                 ; 0000 01BF lcd_init(16);
0003ef e1e0      	LDI  R30,LOW(16)
0003f0 93ea      	ST   -Y,R30
0003f1 d0a7      	RCALL _lcd_init
                 ; 0000 01C0 
                 ; 0000 01C1 // Set up for all Button
                 ; 0000 01C2 PORTC = 0xff;
0003f2 efef      	LDI  R30,LOW(255)
0003f3 b9e8      	OUT  0x8,R30
                 ; 0000 01C3 PORTD.2 = 1;
0003f4 9a5a      	SBI  0xB,2
                 ; 0000 01C4 PORTD.3 = 1;
0003f5 9a5b      	SBI  0xB,3
                 ; 0000 01C5 
                 ; 0000 01C6 // Set up for ultrasonic sensor
                 ; 0000 01C7 DDRB.0 = 0;
0003f6 9820      	CBI  0x4,0
                 ; 0000 01C8 DDRB.1 = 1;
0003f7 9a21      	SBI  0x4,1
                 ; 0000 01C9 
                 ; 0000 01CA // Set up for brake light
                 ; 0000 01CB DDRB.2 = 1;
0003f8 9a22      	SBI  0x4,2
                 ; 0000 01CC PORTB.2 = 0;
0003f9 982a      	CBI  0x5,2
                 ; 0000 01CD 
                 ; 0000 01CE // Global enable interrupts
                 ; 0000 01CF #asm("sei")
0003fa 9478      	sei
                 ; 0000 01D0 
                 ; 0000 01D1 while (1)
                 _0x98:
                 ; 0000 01D2       {
                 ; 0000 01D3         // Cruise control mode
                 ; 0000 01D4         if(mode == 'c')
0003fb e6e3      	LDI  R30,LOW(99)
0003fc 15e4      	CP   R30,R4
0003fd f409      	BRNE _0x9B
                 ; 0000 01D5         {
                 ; 0000 01D6             cruiseControlMode();
0003fe ded4      	RCALL _cruiseControlMode
                 ; 0000 01D7         }
                 ; 0000 01D8         // Adaptive cruise control mode
                 ; 0000 01D9         if(mode == 'a')
                 _0x9B:
0003ff e6e1      	LDI  R30,LOW(97)
000400 15e4      	CP   R30,R4
000401 f481      	BRNE _0x9C
                 ; 0000 01DA         {
                 ; 0000 01DB             activeRadar();
000402 dd77      	RCALL _activeRadar
                 ; 0000 01DC             if(distance > 100)
000403 940e 094a 	CALL SUBOPT_0x3
000405 940e 0953 	CALL SUBOPT_0x4
000407 f009      	BREQ PC+2
000408 f410      	BRCC PC+3
000409 940c 0411 	JMP  _0x9D
                 ; 0000 01DD             {
                 ; 0000 01DE                 if(status == 's')
00040b e7e3      	LDI  R30,LOW(115)
00040c 15e3      	CP   R30,R3
00040d f409      	BRNE _0x9E
                 ; 0000 01DF                 {
                 ; 0000 01E0                     reIncre();
00040e de9d      	RCALL _reIncre
                 ; 0000 01E1                 }
                 ; 0000 01E2                 cruiseControlMode();
                 _0x9E:
00040f dec3      	RCALL _cruiseControlMode
                 ; 0000 01E3             }
                 ; 0000 01E4             else
000410 c001      	RJMP _0x9F
                 _0x9D:
                 ; 0000 01E5             {
                 ; 0000 01E6                 keepGap();
000411 df82      	RCALL _keepGap
                 ; 0000 01E7             }
                 _0x9F:
                 ; 0000 01E8         }
                 ; 0000 01E9         // Normal mode
                 ; 0000 01EA         if(mode == 'n')
                 _0x9C:
000412 e6ee      	LDI  R30,LOW(110)
000413 15e4      	CP   R30,R4
000414 f409      	BRNE _0xA0
                 ; 0000 01EB         {
                 ; 0000 01EC             normalMode();
000415 de3c      	RCALL _normalMode
                 ; 0000 01ED         }
                 ; 0000 01EE       }
                 _0xA0:
000416 cfe4      	RJMP _0x98
                 ; 0000 01EF }
                 _0xA1:
000417 cfff      	RJMP _0xA1
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
000418 81e8      	LD   R30,Y
000419 71e0      	ANDI R30,LOW(0x10)
00041a f011      	BREQ _0x2000004
00041b 9a2e      	SBI  0x5,6
00041c c001      	RJMP _0x2000005
                 _0x2000004:
00041d 982e      	CBI  0x5,6
                 _0x2000005:
00041e 81e8      	LD   R30,Y
00041f 72e0      	ANDI R30,LOW(0x20)
000420 f011      	BREQ _0x2000006
000421 9a2f      	SBI  0x5,7
000422 c001      	RJMP _0x2000007
                 _0x2000006:
000423 982f      	CBI  0x5,7
                 _0x2000007:
000424 81e8      	LD   R30,Y
000425 74e0      	ANDI R30,LOW(0x40)
000426 f011      	BREQ _0x2000008
000427 9a5c      	SBI  0xB,4
000428 c001      	RJMP _0x2000009
                 _0x2000008:
000429 985c      	CBI  0xB,4
                 _0x2000009:
00042a 81e8      	LD   R30,Y
00042b 78e0      	ANDI R30,LOW(0x80)
00042c f011      	BREQ _0x200000A
00042d 9a5f      	SBI  0xB,7
00042e c001      	RJMP _0x200000B
                 _0x200000A:
00042f 985f      	CBI  0xB,7
                 _0x200000B:
                +
000430 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000431 958a     +DEC R24
000432 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000433 9a2d      	SBI  0x5,5
                +
000434 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000435 958a     +DEC R24
000436 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000437 982d      	CBI  0x5,5
                +
000438 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000439 958a     +DEC R24
00043a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00043b c091      	RJMP _0x20C0006
                 __lcd_write_data:
00043c 81e8      	LD   R30,Y
00043d 93ea      	ST   -Y,R30
00043e dfd9      	RCALL __lcd_write_nibble_G100
00043f 81e8          ld    r30,y
000440 95e2          swap  r30
000441 83e8          st    y,r30
000442 81e8      	LD   R30,Y
000443 93ea      	ST   -Y,R30
000444 dfd3      	RCALL __lcd_write_nibble_G100
                +
000445 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000446 958a     +DEC R24
000447 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000448 c084      	RJMP _0x20C0006
                 _lcd_gotoxy:
000449 81e8      	LD   R30,Y
00044a e0f0      	LDI  R31,0
00044b 5ae4      	SUBI R30,LOW(-__base_y_G100)
00044c 4ffc      	SBCI R31,HIGH(-__base_y_G100)
00044d 81e0      	LD   R30,Z
00044e 81a9      	LDD  R26,Y+1
00044f 0fea      	ADD  R30,R26
000450 93ea      	ST   -Y,R30
000451 dfea      	RCALL __lcd_write_data
000452 81e9      	LDD  R30,Y+1
000453 93e0 0360 	STS  __lcd_x,R30
000455 81e8      	LD   R30,Y
000456 93e0 0361 	STS  __lcd_y,R30
                 _0x20C0007:
000458 9622      	ADIW R28,2
000459 9508      	RET
                 _lcd_clear:
00045a e0e2      	LDI  R30,LOW(2)
00045b 940e 09c2 	CALL SUBOPT_0x16
00045d e0ec      	LDI  R30,LOW(12)
00045e 93ea      	ST   -Y,R30
00045f dfdc      	RCALL __lcd_write_data
000460 e0e1      	LDI  R30,LOW(1)
000461 940e 09c2 	CALL SUBOPT_0x16
000463 e0e0      	LDI  R30,LOW(0)
000464 93e0 0361 	STS  __lcd_y,R30
000466 93e0 0360 	STS  __lcd_x,R30
000468 9508      	RET
                 _lcd_putchar:
000469 81a8      	LD   R26,Y
00046a 30aa      	CPI  R26,LOW(0xA)
00046b f031      	BREQ _0x2000011
00046c 91e0 0362 	LDS  R30,__lcd_maxx
00046e 91a0 0360 	LDS  R26,__lcd_x
000470 17ae      	CP   R26,R30
000471 f068      	BRLO _0x2000010
                 _0x2000011:
000472 e0e0      	LDI  R30,LOW(0)
000473 93ea      	ST   -Y,R30
000474 91e0 0361 	LDS  R30,__lcd_y
000476 5fef      	SUBI R30,-LOW(1)
000477 93e0 0361 	STS  __lcd_y,R30
000479 93ea      	ST   -Y,R30
00047a dfce      	RCALL _lcd_gotoxy
00047b 81a8      	LD   R26,Y
00047c 30aa      	CPI  R26,LOW(0xA)
00047d f409      	BRNE _0x2000013
00047e c04e      	RJMP _0x20C0006
                 _0x2000013:
                 _0x2000010:
00047f 91e0 0360 	LDS  R30,__lcd_x
000481 5fef      	SUBI R30,-LOW(1)
000482 93e0 0360 	STS  __lcd_x,R30
000484 9a2b      	SBI  0x5,3
000485 81e8      	LD   R30,Y
000486 93ea      	ST   -Y,R30
000487 dfb4      	RCALL __lcd_write_data
000488 982b      	CBI  0x5,3
000489 c043      	RJMP _0x20C0006
                 _lcd_puts:
00048a 931a      	ST   -Y,R17
                 _0x2000014:
00048b 81a9      	LDD  R26,Y+1
00048c 81ba      	LDD  R27,Y+1+1
00048d 91ed      	LD   R30,X+
00048e 83a9      	STD  Y+1,R26
00048f 83ba      	STD  Y+1+1,R27
000490 2f1e      	MOV  R17,R30
000491 30e0      	CPI  R30,0
000492 f019      	BREQ _0x2000016
000493 931a      	ST   -Y,R17
000494 dfd4      	RCALL _lcd_putchar
000495 cff5      	RJMP _0x2000014
                 _0x2000016:
000496 8118      	LDD  R17,Y+0
000497 9623      	ADIW R28,3
000498 9508      	RET
                 _lcd_init:
000499 9a26      	SBI  0x4,6
00049a 9a27      	SBI  0x4,7
00049b 9a54      	SBI  0xA,4
00049c 9a57      	SBI  0xA,7
00049d 9a25      	SBI  0x4,5
00049e 9a23      	SBI  0x4,3
00049f 9a24      	SBI  0x4,4
0004a0 982d      	CBI  0x5,5
0004a1 982b      	CBI  0x5,3
0004a2 982c      	CBI  0x5,4
0004a3 81e8      	LD   R30,Y
0004a4 93e0 0362 	STS  __lcd_maxx,R30
0004a6 58e0      	SUBI R30,-LOW(128)
                +
0004a7 93e0 035e+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0004a9 81e8      	LD   R30,Y
0004aa 54e0      	SUBI R30,-LOW(192)
                +
0004ab 93e0 035f+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0004ad e1e4      	LDI  R30,LOW(20)
0004ae e0f0      	LDI  R31,HIGH(20)
0004af 93fa      	ST   -Y,R31
0004b0 93ea      	ST   -Y,R30
0004b1 940e 0ac0 	CALL _delay_ms
0004b3 940e 09cb 	CALL SUBOPT_0x17
0004b5 940e 09cb 	CALL SUBOPT_0x17
0004b7 940e 09cb 	CALL SUBOPT_0x17
0004b9 e2e0      	LDI  R30,LOW(32)
0004ba 93ea      	ST   -Y,R30
0004bb df5c      	RCALL __lcd_write_nibble_G100
                +
0004bc ec88     +LDI R24 , LOW ( 200 )
0004bd e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0004be 9701     +SBIW R24 , 1
0004bf f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0004c0 e2e8      	LDI  R30,LOW(40)
0004c1 93ea      	ST   -Y,R30
0004c2 df79      	RCALL __lcd_write_data
0004c3 e0e4      	LDI  R30,LOW(4)
0004c4 93ea      	ST   -Y,R30
0004c5 df76      	RCALL __lcd_write_data
0004c6 e8e5      	LDI  R30,LOW(133)
0004c7 93ea      	ST   -Y,R30
0004c8 df73      	RCALL __lcd_write_data
0004c9 e0e6      	LDI  R30,LOW(6)
0004ca 93ea      	ST   -Y,R30
0004cb df70      	RCALL __lcd_write_data
0004cc df8d      	RCALL _lcd_clear
                 _0x20C0006:
0004cd 9621      	ADIW R28,1
0004ce 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
0004cf 931a      	ST   -Y,R17
0004d0 930a      	ST   -Y,R16
0004d1 81aa      	LDD  R26,Y+2
0004d2 81bb      	LDD  R27,Y+2+1
0004d3 9612      	ADIW R26,2
0004d4 940e 0d00 	CALL __GETW1P
0004d6 9730      	SBIW R30,0
0004d7 f129      	BREQ _0x2020016
0004d8 81aa      	LDD  R26,Y+2
0004d9 81bb      	LDD  R27,Y+2+1
0004da 9614      	ADIW R26,4
0004db 940e 0d00 	CALL __GETW1P
0004dd 018f      	MOVW R16,R30
0004de 9730      	SBIW R30,0
0004df f061      	BREQ _0x2020018
                +
0004e0 3002     +CPI R16 , LOW ( 2 )
0004e1 e0e0     +LDI R30 , HIGH ( 2 )
0004e2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0004e3 f0c0      	BRLO _0x2020019
0004e4 01f8      	MOVW R30,R16
0004e5 9731      	SBIW R30,1
0004e6 018f      	MOVW R16,R30
                +
0004e7 81aa     +LDD R26 , Y + 2
0004e8 81bb     +LDD R27 , Y + 2 + 1
0004e9 9614     +ADIW R26 , 4
0004ea 93ed     +ST X + , R30
0004eb 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020018:
0004ec 81aa      	LDD  R26,Y+2
0004ed 81bb      	LDD  R27,Y+2+1
0004ee 9612      	ADIW R26,2
0004ef 940e 09d4 	CALL SUBOPT_0x18
0004f1 9731      	SBIW R30,1
0004f2 81ac      	LDD  R26,Y+4
0004f3 83a0      	STD  Z+0,R26
0004f4 81aa      	LDD  R26,Y+2
0004f5 81bb      	LDD  R27,Y+2+1
0004f6 940e 0d00 	CALL __GETW1P
0004f8 23ff      	TST  R31
0004f9 f012      	BRMI _0x202001A
0004fa 940e 09d4 	CALL SUBOPT_0x18
                 _0x202001A:
                 _0x2020019:
0004fc c006      	RJMP _0x202001B
                 _0x2020016:
0004fd 81aa      	LDD  R26,Y+2
0004fe 81bb      	LDD  R27,Y+2+1
0004ff efef      	LDI  R30,LOW(65535)
000500 efff      	LDI  R31,HIGH(65535)
000501 93ed      	ST   X+,R30
000502 93fc      	ST   X,R31
                 _0x202001B:
000503 8119      	LDD  R17,Y+1
000504 8108      	LDD  R16,Y+0
000505 9625      	ADIW R28,5
000506 9508      	RET
                 __ftoe_G101:
000507 9724      	SBIW R28,4
000508 e0e0      	LDI  R30,LOW(0)
000509 83e8      	ST   Y,R30
00050a 83e9      	STD  Y+1,R30
00050b e8e0      	LDI  R30,LOW(128)
00050c 83ea      	STD  Y+2,R30
00050d e3ef      	LDI  R30,LOW(63)
00050e 83eb      	STD  Y+3,R30
00050f 940e 0d2c 	CALL __SAVELOCR4
000511 85ee      	LDD  R30,Y+14
000512 85ff      	LDD  R31,Y+14+1
000513 3fef      	CPI  R30,LOW(0xFFFF)
000514 efaf      	LDI  R26,HIGH(0xFFFF)
000515 07fa      	CPC  R31,R26
000516 f449      	BRNE _0x202001F
000517 85e8      	LDD  R30,Y+8
000518 85f9      	LDD  R31,Y+8+1
000519 93fa      	ST   -Y,R31
00051a 93ea      	ST   -Y,R30
                +
00051b eee8     +LDI R30 , LOW ( 2 * _0x2020000 + ( 0 ) )
00051c e0f0     +LDI R31 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW1FN _0x2020000,0
00051d 940e 09da 	CALL SUBOPT_0x19
00051f c0bc      	RJMP _0x20C0005
                 _0x202001F:
000520 3fef      	CPI  R30,LOW(0x7FFF)
000521 e7af      	LDI  R26,HIGH(0x7FFF)
000522 07fa      	CPC  R31,R26
000523 f449      	BRNE _0x202001E
000524 85e8      	LDD  R30,Y+8
000525 85f9      	LDD  R31,Y+8+1
000526 93fa      	ST   -Y,R31
000527 93ea      	ST   -Y,R30
                +
000528 eee9     +LDI R30 , LOW ( 2 * _0x2020000 + ( 1 ) )
000529 e0f0     +LDI R31 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW1FN _0x2020000,1
00052a 940e 09da 	CALL SUBOPT_0x19
00052c c0af      	RJMP _0x20C0005
                 _0x202001E:
00052d 85ab      	LDD  R26,Y+11
00052e 30a7      	CPI  R26,LOW(0x7)
00052f f010      	BRLO _0x2020021
000530 e0e6      	LDI  R30,LOW(6)
000531 87eb      	STD  Y+11,R30
                 _0x2020021:
000532 851b      	LDD  R17,Y+11
                 _0x2020022:
000533 2fe1      	MOV  R30,R17
000534 5011      	SUBI R17,1
000535 30e0      	CPI  R30,0
000536 f019      	BREQ _0x2020024
000537 940e 09de 	CALL SUBOPT_0x1A
000539 cff9      	RJMP _0x2020022
                 _0x2020024:
                +
00053a 85ec     +LDD R30 , Y + 12
00053b 85fd     +LDD R31 , Y + 12 + 1
00053c 856e     +LDD R22 , Y + 12 + 2
00053d 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00053e 940e 0d26 	CALL __CPD10
000540 f421      	BRNE _0x2020025
000541 e030      	LDI  R19,LOW(0)
000542 940e 09de 	CALL SUBOPT_0x1A
000544 c032      	RJMP _0x2020026
                 _0x2020025:
000545 853b      	LDD  R19,Y+11
000546 940e 09ed 	CALL SUBOPT_0x1B
000548 f009      	BREQ PC+2
000549 f410      	BRCC PC+3
00054a 940c 0557 	JMP  _0x2020027
00054c 940e 09de 	CALL SUBOPT_0x1A
                 _0x2020028:
00054e 940e 09ed 	CALL SUBOPT_0x1B
000550 f028      	BRLO _0x202002A
000551 940e 09f8 	CALL SUBOPT_0x1C
000553 940e 09fd 	CALL SUBOPT_0x1D
000555 cff8      	RJMP _0x2020028
                 _0x202002A:
000556 c00d      	RJMP _0x202002B
                 _0x2020027:
                 _0x202002C:
000557 940e 09ed 	CALL SUBOPT_0x1B
000559 f440      	BRSH _0x202002E
00055a 940e 09f8 	CALL SUBOPT_0x1C
00055c 940e 0a09 	CALL SUBOPT_0x1E
00055e 940e 0a10 	CALL SUBOPT_0x1F
000560 5031      	SUBI R19,LOW(1)
000561 cff5      	RJMP _0x202002C
                 _0x202002E:
000562 940e 09de 	CALL SUBOPT_0x1A
                 _0x202002B:
                +
000564 85ec     +LDD R30 , Y + 12
000565 85fd     +LDD R31 , Y + 12 + 1
000566 856e     +LDD R22 , Y + 12 + 2
000567 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
                +
000568 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000569 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00056a e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00056b e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00056c 940e 0b72 	CALL __ADDF12
00056e 940e 0a10 	CALL SUBOPT_0x1F
000570 940e 09ed 	CALL SUBOPT_0x1B
000572 f020      	BRLO _0x202002F
000573 940e 09f8 	CALL SUBOPT_0x1C
000575 940e 09fd 	CALL SUBOPT_0x1D
                 _0x202002F:
                 _0x2020026:
000577 e010      	LDI  R17,LOW(0)
                 _0x2020030:
000578 85eb      	LDD  R30,Y+11
000579 17e1      	CP   R30,R17
00057a f1a8      	BRLO _0x2020032
                +
00057b 81ac     +LDD R26 , Y + 4
00057c 81bd     +LDD R27 , Y + 4 + 1
00057d 818e     +LDD R24 , Y + 4 + 2
00057e 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00057f 940e 0a15 	CALL SUBOPT_0x20
000581 940e 09ac 	CALL SUBOPT_0x13
000583 940e 0d14 	CALL __PUTPARD1
000585 940e 0883 	CALL _floor
                +
000587 83ec     +STD Y + 4 , R30
000588 83fd     +STD Y + 4 + 1 , R31
000589 836e     +STD Y + 4 + 2 , R22
00058a 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00058b 940e 09f8 	CALL SUBOPT_0x1C
00058d 940e 0c10 	CALL __DIVF21
00058f 940e 0aff 	CALL __CFD1U
000591 2f0e      	MOV  R16,R30
000592 940e 0a1a 	CALL SUBOPT_0x21
000594 940e 0a21 	CALL SUBOPT_0x22
000596 27ff      	CLR  R31
000597 2766      	CLR  R22
000598 2777      	CLR  R23
000599 940e 0b38 	CALL __CDF1
                +
00059b 81ac     +LDD R26 , Y + 4
00059c 81bd     +LDD R27 , Y + 4 + 1
00059d 818e     +LDD R24 , Y + 4 + 2
00059e 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00059f 940e 0bc2 	CALL __MULF12
0005a1 940e 09f8 	CALL SUBOPT_0x1C
0005a3 940e 09b5 	CALL SUBOPT_0x14
0005a5 940e 0a10 	CALL SUBOPT_0x1F
0005a7 2fe1      	MOV  R30,R17
0005a8 5f1f      	SUBI R17,-1
0005a9 30e0      	CPI  R30,0
0005aa f669      	BRNE _0x2020030
0005ab 940e 0a1a 	CALL SUBOPT_0x21
0005ad e2ee      	LDI  R30,LOW(46)
0005ae 93ec      	ST   X,R30
0005af cfc8      	RJMP _0x2020030
                 _0x2020032:
0005b0 940e 0a26 	CALL SUBOPT_0x23
0005b2 9731      	SBIW R30,1
0005b3 85aa      	LDD  R26,Y+10
0005b4 83a0      	STD  Z+0,R26
0005b5 3030      	CPI  R19,0
0005b6 f42c      	BRGE _0x2020034
0005b7 9531      	NEG  R19
0005b8 85a8      	LDD  R26,Y+8
0005b9 85b9      	LDD  R27,Y+8+1
0005ba e2ed      	LDI  R30,LOW(45)
0005bb c003      	RJMP _0x2020114
                 _0x2020034:
0005bc 85a8      	LDD  R26,Y+8
0005bd 85b9      	LDD  R27,Y+8+1
0005be e2eb      	LDI  R30,LOW(43)
                 _0x2020114:
0005bf 93ec      	ST   X,R30
0005c0 940e 0a26 	CALL SUBOPT_0x23
0005c2 940e 0a26 	CALL SUBOPT_0x23
0005c4 9731      	SBIW R30,1
0005c5 01bf      	MOVW R22,R30
0005c6 2fa3      	MOV  R26,R19
0005c7 e0ea      	LDI  R30,LOW(10)
0005c8 940e 0ca7 	CALL __DIVB21
0005ca 5de0      	SUBI R30,-LOW(48)
0005cb 01db      	MOVW R26,R22
0005cc 93ec      	ST   X,R30
0005cd 940e 0a26 	CALL SUBOPT_0x23
0005cf 9731      	SBIW R30,1
0005d0 01bf      	MOVW R22,R30
0005d1 2fa3      	MOV  R26,R19
0005d2 e0ea      	LDI  R30,LOW(10)
0005d3 940e 0ce4 	CALL __MODB21
0005d5 5de0      	SUBI R30,-LOW(48)
0005d6 01db      	MOVW R26,R22
0005d7 93ec      	ST   X,R30
0005d8 85a8      	LDD  R26,Y+8
0005d9 85b9      	LDD  R27,Y+8+1
0005da e0e0      	LDI  R30,LOW(0)
0005db 93ec      	ST   X,R30
                 _0x20C0005:
0005dc 940e 0d33 	CALL __LOADLOCR4
0005de 9660      	ADIW R28,16
0005df 9508      	RET
                 __print_G101:
0005e0 97ef      	SBIW R28,63
0005e1 9761      	SBIW R28,17
0005e2 940e 0d2a 	CALL __SAVELOCR6
0005e4 e010      	LDI  R17,0
                +
0005e5 01fe     +MOVW R30 , R28
0005e6 5ae8     +SUBI R30 , LOW ( - 88 )
0005e7 4fff     +SBCI R31 , HIGH ( - 88 )
0005e8 9001     +LD R0 , Z +
0005e9 81f0     +LD R31 , Z
0005ea 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0005eb 87e8      	STD  Y+8,R30
0005ec 87f9      	STD  Y+8+1,R31
                +
0005ed 01fe     +MOVW R30 , R28
0005ee 5aea     +SUBI R30 , LOW ( - 86 )
0005ef 4fff     +SBCI R31 , HIGH ( - 86 )
0005f0 9001     +LD R0 , Z +
0005f1 81f0     +LD R31 , Z
0005f2 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0005f3 83ee      	STD  Y+6,R30
0005f4 83ff      	STD  Y+6+1,R31
0005f5 81ae      	LDD  R26,Y+6
0005f6 81bf      	LDD  R27,Y+6+1
0005f7 e0e0      	LDI  R30,LOW(0)
0005f8 e0f0      	LDI  R31,HIGH(0)
0005f9 93ed      	ST   X+,R30
0005fa 93fc      	ST   X,R31
                 _0x2020036:
0005fb 01de      	MOVW R26,R28
0005fc 5aa4      	SUBI R26,LOW(-(92))
0005fd 4fbf      	SBCI R27,HIGH(-(92))
0005fe 940e 09d4 	CALL SUBOPT_0x18
000600 9731      	SBIW R30,1
000601 91e4      	LPM  R30,Z
000602 2f2e      	MOV  R18,R30
000603 30e0      	CPI  R30,0
000604 f411      	BRNE PC+3
000605 940c 07f5 	JMP _0x2020038
000607 2fe1      	MOV  R30,R17
000608 30e0      	CPI  R30,0
000609 f439      	BRNE _0x202003C
00060a 3225      	CPI  R18,37
00060b f411      	BRNE _0x202003D
00060c e011      	LDI  R17,LOW(1)
00060d c002      	RJMP _0x202003E
                 _0x202003D:
00060e 940e 0a2c 	CALL SUBOPT_0x24
                 _0x202003E:
000610 c1e3      	RJMP _0x202003B
                 _0x202003C:
000611 30e1      	CPI  R30,LOW(0x1)
000612 f4c1      	BRNE _0x202003F
000613 3225      	CPI  R18,37
000614 f419      	BRNE _0x2020040
000615 940e 0a2c 	CALL SUBOPT_0x24
000617 c1db      	RJMP _0x2020115
                 _0x2020040:
000618 e012      	LDI  R17,LOW(2)
000619 e0e0      	LDI  R30,LOW(0)
00061a 8bed      	STD  Y+21,R30
00061b e000      	LDI  R16,LOW(0)
00061c 322d      	CPI  R18,45
00061d f411      	BRNE _0x2020041
00061e e001      	LDI  R16,LOW(1)
00061f c1d4      	RJMP _0x202003B
                 _0x2020041:
000620 322b      	CPI  R18,43
000621 f419      	BRNE _0x2020042
000622 e2eb      	LDI  R30,LOW(43)
000623 8bed      	STD  Y+21,R30
000624 c1cf      	RJMP _0x202003B
                 _0x2020042:
000625 3220      	CPI  R18,32
000626 f419      	BRNE _0x2020043
000627 e2e0      	LDI  R30,LOW(32)
000628 8bed      	STD  Y+21,R30
000629 c1ca      	RJMP _0x202003B
                 _0x2020043:
00062a c002      	RJMP _0x2020044
                 _0x202003F:
00062b 30e2      	CPI  R30,LOW(0x2)
00062c f439      	BRNE _0x2020045
                 _0x2020044:
00062d e050      	LDI  R21,LOW(0)
00062e e013      	LDI  R17,LOW(3)
00062f 3320      	CPI  R18,48
000630 f411      	BRNE _0x2020046
000631 6800      	ORI  R16,LOW(128)
000632 c1c1      	RJMP _0x202003B
                 _0x2020046:
000633 c002      	RJMP _0x2020047
                 _0x2020045:
000634 30e3      	CPI  R30,LOW(0x3)
000635 f491      	BRNE _0x2020048
                 _0x2020047:
000636 3320      	CPI  R18,48
000637 f010      	BRLO _0x202004A
000638 332a      	CPI  R18,58
000639 f008      	BRLO _0x202004B
                 _0x202004A:
00063a c007      	RJMP _0x2020049
                 _0x202004B:
00063b e0aa      	LDI  R26,LOW(10)
00063c 9f5a      	MUL  R21,R26
00063d 2d50      	MOV  R21,R0
00063e 2fe2      	MOV  R30,R18
00063f 53e0      	SUBI R30,LOW(48)
000640 0f5e      	ADD  R21,R30
000641 c1b2      	RJMP _0x202003B
                 _0x2020049:
000642 e040      	LDI  R20,LOW(0)
000643 322e      	CPI  R18,46
000644 f411      	BRNE _0x202004C
000645 e014      	LDI  R17,LOW(4)
000646 c1ad      	RJMP _0x202003B
                 _0x202004C:
000647 c00f      	RJMP _0x202004D
                 _0x2020048:
000648 30e4      	CPI  R30,LOW(0x4)
000649 f499      	BRNE _0x202004F
00064a 3320      	CPI  R18,48
00064b f010      	BRLO _0x2020051
00064c 332a      	CPI  R18,58
00064d f008      	BRLO _0x2020052
                 _0x2020051:
00064e c008      	RJMP _0x2020050
                 _0x2020052:
00064f 6200      	ORI  R16,LOW(32)
000650 e0aa      	LDI  R26,LOW(10)
000651 9f4a      	MUL  R20,R26
000652 2d40      	MOV  R20,R0
000653 2fe2      	MOV  R30,R18
000654 53e0      	SUBI R30,LOW(48)
000655 0f4e      	ADD  R20,R30
000656 c19d      	RJMP _0x202003B
                 _0x2020050:
                 _0x202004D:
000657 362c      	CPI  R18,108
000658 f419      	BRNE _0x2020053
000659 6002      	ORI  R16,LOW(2)
00065a e015      	LDI  R17,LOW(5)
00065b c198      	RJMP _0x202003B
                 _0x2020053:
00065c c004      	RJMP _0x2020054
                 _0x202004F:
00065d 30e5      	CPI  R30,LOW(0x5)
00065e f011      	BREQ PC+3
00065f 940c 07f4 	JMP _0x202003B
                 _0x2020054:
000661 2fe2      	MOV  R30,R18
000662 36e3      	CPI  R30,LOW(0x63)
000663 f459      	BRNE _0x2020059
000664 940e 0a35 	CALL SUBOPT_0x25
000666 940e 0a3c 	CALL SUBOPT_0x26
000668 940e 0a35 	CALL SUBOPT_0x25
00066a 81a4      	LDD  R26,Z+4
00066b 93aa      	ST   -Y,R26
00066c 940e 0a43 	CALL SUBOPT_0x27
00066e c184      	RJMP _0x202005A
                 _0x2020059:
00066f 34e5      	CPI  R30,LOW(0x45)
000670 f011      	BREQ _0x202005D
000671 36e5      	CPI  R30,LOW(0x65)
000672 f409      	BRNE _0x202005E
                 _0x202005D:
000673 c004      	RJMP _0x202005F
                 _0x202005E:
000674 36e6      	CPI  R30,LOW(0x66)
000675 f011      	BREQ PC+3
000676 940c 06c2 	JMP _0x2020060
                 _0x202005F:
000678 01fe      	MOVW R30,R28
000679 9676      	ADIW R30,22
00067a 87ee      	STD  Y+14,R30
00067b 87ff      	STD  Y+14+1,R31
00067c 940e 0a4b 	CALL SUBOPT_0x28
00067e 940e 0d04 	CALL __GETD1P
000680 940e 0a52 	CALL SUBOPT_0x29
000682 940e 0a57 	CALL SUBOPT_0x2A
000684 85ad      	LDD  R26,Y+13
000685 23aa      	TST  R26
000686 f022      	BRMI _0x2020061
000687 89ad      	LDD  R26,Y+21
000688 32ab      	CPI  R26,LOW(0x2B)
000689 f049      	BREQ _0x2020063
00068a c017      	RJMP _0x2020064
                 _0x2020061:
00068b 940e 0a59 	CALL SUBOPT_0x2B
00068d 940e 0acc 	CALL __ANEGF1
00068f 940e 0a52 	CALL SUBOPT_0x29
000691 e2ed      	LDI  R30,LOW(45)
000692 8bed      	STD  Y+21,R30
                 _0x2020063:
000693 ff07      	SBRS R16,7
000694 c005      	RJMP _0x2020065
000695 89ed      	LDD  R30,Y+21
000696 93ea      	ST   -Y,R30
000697 940e 0a43 	CALL SUBOPT_0x27
000699 c008      	RJMP _0x2020066
                 _0x2020065:
00069a 85ee      	LDD  R30,Y+14
00069b 85ff      	LDD  R31,Y+14+1
00069c 9631      	ADIW R30,1
00069d 87ee      	STD  Y+14,R30
00069e 87ff      	STD  Y+14+1,R31
00069f 9731      	SBIW R30,1
0006a0 89ad      	LDD  R26,Y+21
0006a1 83a0      	STD  Z+0,R26
                 _0x2020066:
                 _0x2020064:
0006a2 ff05      	SBRS R16,5
0006a3 e046      	LDI  R20,LOW(6)
0006a4 3626      	CPI  R18,102
0006a5 f461      	BRNE _0x2020068
0006a6 940e 0a59 	CALL SUBOPT_0x2B
0006a8 940e 0d14 	CALL __PUTPARD1
0006aa 934a      	ST   -Y,R20
0006ab 89eb      	LDD  R30,Y+19
0006ac 89fc      	LDD  R31,Y+19+1
0006ad 93fa      	ST   -Y,R31
0006ae 93ea      	ST   -Y,R30
0006af 940e 089a 	CALL _ftoa
0006b1 c00b      	RJMP _0x2020069
                 _0x2020068:
0006b2 940e 0a59 	CALL SUBOPT_0x2B
0006b4 940e 0d14 	CALL __PUTPARD1
0006b6 934a      	ST   -Y,R20
0006b7 932a      	ST   -Y,R18
0006b8 89ec      	LDD  R30,Y+20
0006b9 89fd      	LDD  R31,Y+20+1
0006ba 93fa      	ST   -Y,R31
0006bb 93ea      	ST   -Y,R30
0006bc de4a      	RCALL __ftoe_G101
                 _0x2020069:
0006bd 01fe      	MOVW R30,R28
0006be 9676      	ADIW R30,22
0006bf 940e 0a5e 	CALL SUBOPT_0x2C
0006c1 c01e      	RJMP _0x202006A
                 _0x2020060:
0006c2 37e3      	CPI  R30,LOW(0x73)
0006c3 f439      	BRNE _0x202006C
0006c4 940e 0a57 	CALL SUBOPT_0x2A
0006c6 940e 0a66 	CALL SUBOPT_0x2D
0006c8 940e 0a5e 	CALL SUBOPT_0x2C
0006ca c00e      	RJMP _0x202006D
                 _0x202006C:
0006cb 37e0      	CPI  R30,LOW(0x70)
0006cc f4c1      	BRNE _0x202006F
0006cd 940e 0a57 	CALL SUBOPT_0x2A
0006cf 940e 0a66 	CALL SUBOPT_0x2D
0006d1 87ee      	STD  Y+14,R30
0006d2 87ff      	STD  Y+14+1,R31
0006d3 93fa      	ST   -Y,R31
0006d4 93ea      	ST   -Y,R30
0006d5 940e 0849 	CALL _strlenf
0006d7 2f1e      	MOV  R17,R30
0006d8 6008      	ORI  R16,LOW(8)
                 _0x202006D:
0006d9 770f      	ANDI R16,LOW(127)
0006da 3040      	CPI  R20,0
0006db f011      	BREQ _0x2020071
0006dc 1741      	CP   R20,R17
0006dd f008      	BRLO _0x2020072
                 _0x2020071:
0006de c001      	RJMP _0x2020070
                 _0x2020072:
0006df 2f14      	MOV  R17,R20
                 _0x2020070:
                 _0x202006A:
0006e0 e040      	LDI  R20,LOW(0)
0006e1 e0e0      	LDI  R30,LOW(0)
0006e2 8bec      	STD  Y+20,R30
0006e3 e030      	LDI  R19,LOW(0)
0006e4 c06e      	RJMP _0x2020073
                 _0x202006F:
0006e5 36e4      	CPI  R30,LOW(0x64)
0006e6 f011      	BREQ _0x2020076
0006e7 36e9      	CPI  R30,LOW(0x69)
0006e8 f411      	BRNE _0x2020077
                 _0x2020076:
0006e9 6004      	ORI  R16,LOW(4)
0006ea c002      	RJMP _0x2020078
                 _0x2020077:
0006eb 37e5      	CPI  R30,LOW(0x75)
0006ec f4a1      	BRNE _0x2020079
                 _0x2020078:
0006ed e0ea      	LDI  R30,LOW(10)
0006ee 8bec      	STD  Y+20,R30
0006ef ff01      	SBRS R16,1
0006f0 c008      	RJMP _0x202007A
                +
0006f1 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0006f2 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0006f3 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0006f4 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0006f5 940e 0a6b 	CALL SUBOPT_0x2E
0006f7 e01a      	LDI  R17,LOW(10)
0006f8 c023      	RJMP _0x202007B
                 _0x202007A:
                +
0006f9 e1e0     +LDI R30 , LOW ( 0x2710 )
0006fa e2f7     +LDI R31 , HIGH ( 0x2710 )
0006fb e060     +LDI R22 , BYTE3 ( 0x2710 )
0006fc e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0006fd 940e 0a6b 	CALL SUBOPT_0x2E
0006ff e015      	LDI  R17,LOW(5)
000700 c01b      	RJMP _0x202007B
                 _0x2020079:
000701 35e8      	CPI  R30,LOW(0x58)
000702 f411      	BRNE _0x202007D
000703 6008      	ORI  R16,LOW(8)
000704 c004      	RJMP _0x202007E
                 _0x202007D:
000705 37e8      	CPI  R30,LOW(0x78)
000706 f011      	BREQ PC+3
000707 940c 07f3 	JMP _0x20200BC
                 _0x202007E:
000709 e1e0      	LDI  R30,LOW(16)
00070a 8bec      	STD  Y+20,R30
00070b ff01      	SBRS R16,1
00070c c008      	RJMP _0x2020080
                +
00070d e0e0     +LDI R30 , LOW ( 0x10000000 )
00070e e0f0     +LDI R31 , HIGH ( 0x10000000 )
00070f e060     +LDI R22 , BYTE3 ( 0x10000000 )
000710 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000711 940e 0a6b 	CALL SUBOPT_0x2E
000713 e018      	LDI  R17,LOW(8)
000714 c007      	RJMP _0x202007B
                 _0x2020080:
                +
000715 e0e0     +LDI R30 , LOW ( 0x1000 )
000716 e1f0     +LDI R31 , HIGH ( 0x1000 )
000717 e060     +LDI R22 , BYTE3 ( 0x1000 )
000718 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000719 940e 0a6b 	CALL SUBOPT_0x2E
00071b e014      	LDI  R17,LOW(4)
                 _0x202007B:
00071c 3040      	CPI  R20,0
00071d f011      	BREQ _0x2020081
00071e 770f      	ANDI R16,LOW(127)
00071f c001      	RJMP _0x2020082
                 _0x2020081:
000720 e041      	LDI  R20,LOW(1)
                 _0x2020082:
000721 ff01      	SBRS R16,1
000722 c008      	RJMP _0x2020083
000723 940e 0a57 	CALL SUBOPT_0x2A
000725 940e 0a4b 	CALL SUBOPT_0x28
000727 9614      	ADIW R26,4
000728 940e 0d04 	CALL __GETD1P
00072a c00f      	RJMP _0x2020116
                 _0x2020083:
00072b ff02      	SBRS R16,2
00072c c007      	RJMP _0x2020085
00072d 940e 0a57 	CALL SUBOPT_0x2A
00072f 940e 0a66 	CALL SUBOPT_0x2D
000731 940e 0c8c 	CALL __CWD1
000733 c006      	RJMP _0x2020116
                 _0x2020085:
000734 940e 0a57 	CALL SUBOPT_0x2A
000736 940e 0a66 	CALL SUBOPT_0x2D
000738 2766      	CLR  R22
000739 2777      	CLR  R23
                 _0x2020116:
                +
00073a 87ea     +STD Y + 10 , R30
00073b 87fb     +STD Y + 10 + 1 , R31
00073c 876c     +STD Y + 10 + 2 , R22
00073d 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00073e ff02      	SBRS R16,2
00073f c012      	RJMP _0x2020087
000740 85ad      	LDD  R26,Y+13
000741 23aa      	TST  R26
000742 f442      	BRPL _0x2020088
000743 940e 0a59 	CALL SUBOPT_0x2B
000745 940e 0c79 	CALL __ANEGD1
000747 940e 0a52 	CALL SUBOPT_0x29
000749 e2ed      	LDI  R30,LOW(45)
00074a 8bed      	STD  Y+21,R30
                 _0x2020088:
00074b 89ed      	LDD  R30,Y+21
00074c 30e0      	CPI  R30,0
00074d f019      	BREQ _0x2020089
00074e 5f1f      	SUBI R17,-LOW(1)
00074f 5f4f      	SUBI R20,-LOW(1)
000750 c001      	RJMP _0x202008A
                 _0x2020089:
000751 7f0b      	ANDI R16,LOW(251)
                 _0x202008A:
                 _0x2020087:
000752 2f34      	MOV  R19,R20
                 _0x2020073:
000753 fd00      	SBRC R16,0
000754 c014      	RJMP _0x202008B
                 _0x202008C:
000755 1715      	CP   R17,R21
000756 f410      	BRSH _0x202008F
000757 1735      	CP   R19,R21
000758 f008      	BRLO _0x2020090
                 _0x202008F:
000759 c00f      	RJMP _0x202008E
                 _0x2020090:
00075a ff07      	SBRS R16,7
00075b c008      	RJMP _0x2020091
00075c ff02      	SBRS R16,2
00075d c004      	RJMP _0x2020092
00075e 7f0b      	ANDI R16,LOW(251)
00075f 892d      	LDD  R18,Y+21
000760 5011      	SUBI R17,LOW(1)
000761 c001      	RJMP _0x2020093
                 _0x2020092:
000762 e320      	LDI  R18,LOW(48)
                 _0x2020093:
000763 c001      	RJMP _0x2020094
                 _0x2020091:
000764 e220      	LDI  R18,LOW(32)
                 _0x2020094:
000765 940e 0a2c 	CALL SUBOPT_0x24
000767 5051      	SUBI R21,LOW(1)
000768 cfec      	RJMP _0x202008C
                 _0x202008E:
                 _0x202008B:
                 _0x2020095:
000769 1714      	CP   R17,R20
00076a f490      	BRSH _0x2020097
00076b 6100      	ORI  R16,LOW(16)
00076c ff02      	SBRS R16,2
00076d c006      	RJMP _0x2020098
00076e 940e 0a70 	CALL SUBOPT_0x2F
000770 f009      	BREQ _0x2020099
000771 5051      	SUBI R21,LOW(1)
                 _0x2020099:
000772 5011      	SUBI R17,LOW(1)
000773 5041      	SUBI R20,LOW(1)
                 _0x2020098:
000774 e3e0      	LDI  R30,LOW(48)
000775 93ea      	ST   -Y,R30
000776 940e 0a43 	CALL SUBOPT_0x27
000778 3050      	CPI  R21,0
000779 f009      	BREQ _0x202009A
00077a 5051      	SUBI R21,LOW(1)
                 _0x202009A:
00077b 5041      	SUBI R20,LOW(1)
00077c cfec      	RJMP _0x2020095
                 _0x2020097:
00077d 2f31      	MOV  R19,R17
00077e 89ec      	LDD  R30,Y+20
00077f 30e0      	CPI  R30,0
000780 f4b9      	BRNE _0x202009B
                 _0x202009C:
000781 3030      	CPI  R19,0
000782 f0a1      	BREQ _0x202009E
000783 ff03      	SBRS R16,3
000784 c006      	RJMP _0x202009F
000785 85ee      	LDD  R30,Y+14
000786 85ff      	LDD  R31,Y+14+1
000787 9125      	LPM  R18,Z+
000788 87ee      	STD  Y+14,R30
000789 87ff      	STD  Y+14+1,R31
00078a c005      	RJMP _0x20200A0
                 _0x202009F:
00078b 85ae      	LDD  R26,Y+14
00078c 85bf      	LDD  R27,Y+14+1
00078d 912d      	LD   R18,X+
00078e 87ae      	STD  Y+14,R26
00078f 87bf      	STD  Y+14+1,R27
                 _0x20200A0:
000790 940e 0a2c 	CALL SUBOPT_0x24
000792 3050      	CPI  R21,0
000793 f009      	BREQ _0x20200A1
000794 5051      	SUBI R21,LOW(1)
                 _0x20200A1:
000795 5031      	SUBI R19,LOW(1)
000796 cfea      	RJMP _0x202009C
                 _0x202009E:
000797 c051      	RJMP _0x20200A2
                 _0x202009B:
                 _0x20200A4:
000798 940e 0a84 	CALL SUBOPT_0x30
00079a 940e 0cbf 	CALL __DIVD21U
00079c 2f2e      	MOV  R18,R30
00079d 302a      	CPI  R18,10
00079e f030      	BRLO _0x20200A6
00079f ff03      	SBRS R16,3
0007a0 c002      	RJMP _0x20200A7
0007a1 5c29      	SUBI R18,-LOW(55)
0007a2 c001      	RJMP _0x20200A8
                 _0x20200A7:
0007a3 5a29      	SUBI R18,-LOW(87)
                 _0x20200A8:
0007a4 c001      	RJMP _0x20200A9
                 _0x20200A6:
0007a5 5d20      	SUBI R18,-LOW(48)
                 _0x20200A9:
0007a6 fd04      	SBRC R16,4
0007a7 c021      	RJMP _0x20200AB
0007a8 3321      	CPI  R18,49
0007a9 f460      	BRSH _0x20200AD
                +
0007aa 89a8     +LDD R26 , Y + 16
0007ab 89b9     +LDD R27 , Y + 16 + 1
0007ac 898a     +LDD R24 , Y + 16 + 2
0007ad 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0007ae 30a1     +CPI R26 , LOW ( 0x1 )
0007af e0e0     +LDI R30 , HIGH ( 0x1 )
0007b0 07be     +CPC R27 , R30
0007b1 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0007b2 078e     +CPC R24 , R30
0007b3 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0007b4 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0007b5 f409      	BRNE _0x20200AC
                 _0x20200AD:
0007b6 c00b      	RJMP _0x20200AF
                 _0x20200AC:
0007b7 1743      	CP   R20,R19
0007b8 f440      	BRSH _0x2020117
0007b9 1753      	CP   R21,R19
0007ba f010      	BRLO _0x20200B2
0007bb ff00      	SBRS R16,0
0007bc c001      	RJMP _0x20200B3
                 _0x20200B2:
0007bd c010      	RJMP _0x20200B1
                 _0x20200B3:
0007be e220      	LDI  R18,LOW(32)
0007bf ff07      	SBRS R16,7
0007c0 c008      	RJMP _0x20200B4
                 _0x2020117:
0007c1 e320      	LDI  R18,LOW(48)
                 _0x20200AF:
0007c2 6100      	ORI  R16,LOW(16)
0007c3 ff02      	SBRS R16,2
0007c4 c004      	RJMP _0x20200B5
0007c5 940e 0a70 	CALL SUBOPT_0x2F
0007c7 f009      	BREQ _0x20200B6
0007c8 5051      	SUBI R21,LOW(1)
                 _0x20200B6:
                 _0x20200B5:
                 _0x20200B4:
                 _0x20200AB:
0007c9 940e 0a2c 	CALL SUBOPT_0x24
0007cb 3050      	CPI  R21,0
0007cc f009      	BREQ _0x20200B7
0007cd 5051      	SUBI R21,LOW(1)
                 _0x20200B7:
                 _0x20200B1:
0007ce 5031      	SUBI R19,LOW(1)
0007cf 940e 0a84 	CALL SUBOPT_0x30
0007d1 940e 0cf0 	CALL __MODD21U
0007d3 940e 0a52 	CALL SUBOPT_0x29
0007d5 89ec      	LDD  R30,Y+20
                +
0007d6 89a8     +LDD R26 , Y + 16
0007d7 89b9     +LDD R27 , Y + 16 + 1
0007d8 898a     +LDD R24 , Y + 16 + 2
0007d9 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0007da 27ff      	CLR  R31
0007db 2766      	CLR  R22
0007dc 2777      	CLR  R23
0007dd 940e 0cbf 	CALL __DIVD21U
0007df 940e 0a6b 	CALL SUBOPT_0x2E
                +
0007e1 89e8     +LDD R30 , Y + 16
0007e2 89f9     +LDD R31 , Y + 16 + 1
0007e3 896a     +LDD R22 , Y + 16 + 2
0007e4 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0007e5 940e 0d26 	CALL __CPD10
0007e7 f009      	BREQ _0x20200A5
0007e8 cfaf      	RJMP _0x20200A4
                 _0x20200A5:
                 _0x20200A2:
0007e9 ff00      	SBRS R16,0
0007ea c008      	RJMP _0x20200B8
                 _0x20200B9:
0007eb 3050      	CPI  R21,0
0007ec f031      	BREQ _0x20200BB
0007ed 5051      	SUBI R21,LOW(1)
0007ee e2e0      	LDI  R30,LOW(32)
0007ef 93ea      	ST   -Y,R30
0007f0 940e 0a43 	CALL SUBOPT_0x27
0007f2 cff8      	RJMP _0x20200B9
                 _0x20200BB:
                 _0x20200B8:
                 _0x20200BC:
                 _0x202005A:
                 _0x2020115:
0007f3 e010      	LDI  R17,LOW(0)
                 _0x202003B:
0007f4 ce06      	RJMP _0x2020036
                 _0x2020038:
0007f5 81ae      	LDD  R26,Y+6
0007f6 81bf      	LDD  R27,Y+6+1
0007f7 940e 0d00 	CALL __GETW1P
0007f9 940e 0d31 	CALL __LOADLOCR6
0007fb 96ef      	ADIW R28,63
0007fc 966f      	ADIW R28,31
0007fd 9508      	RET
                 _sprintf:
0007fe 92ff      	PUSH R15
0007ff 2ef8      	MOV  R15,R24
000800 9726      	SBIW R28,6
000801 940e 0d2c 	CALL __SAVELOCR4
000803 940e 0a8d 	CALL SUBOPT_0x31
000805 9730      	SBIW R30,0
000806 f419      	BRNE _0x20200BD
000807 efef      	LDI  R30,LOW(65535)
000808 efff      	LDI  R31,HIGH(65535)
000809 c025      	RJMP _0x20C0004
                 _0x20200BD:
00080a 01de      	MOVW R26,R28
00080b 9616      	ADIW R26,6
00080c 940e 0c75 	CALL __ADDW2R15
00080e 018d      	MOVW R16,R26
00080f 940e 0a8d 	CALL SUBOPT_0x31
000811 83ee      	STD  Y+6,R30
000812 83ff      	STD  Y+6+1,R31
000813 e0e0      	LDI  R30,LOW(0)
000814 87e8      	STD  Y+8,R30
000815 87e9      	STD  Y+8+1,R30
000816 01de      	MOVW R26,R28
000817 961a      	ADIW R26,10
000818 940e 0c75 	CALL __ADDW2R15
00081a 940e 0d00 	CALL __GETW1P
00081c 93fa      	ST   -Y,R31
00081d 93ea      	ST   -Y,R30
00081e 931a      	ST   -Y,R17
00081f 930a      	ST   -Y,R16
000820 ecef      	LDI  R30,LOW(_put_buff_G101)
000821 e0f4      	LDI  R31,HIGH(_put_buff_G101)
000822 93fa      	ST   -Y,R31
000823 93ea      	ST   -Y,R30
000824 01fe      	MOVW R30,R28
000825 963a      	ADIW R30,10
000826 93fa      	ST   -Y,R31
000827 93ea      	ST   -Y,R30
000828 ddb7      	RCALL __print_G101
000829 019f      	MOVW R18,R30
00082a 81ae      	LDD  R26,Y+6
00082b 81bf      	LDD  R27,Y+6+1
00082c e0e0      	LDI  R30,LOW(0)
00082d 93ec      	ST   X,R30
00082e 01f9      	MOVW R30,R18
                 _0x20C0004:
00082f 940e 0d33 	CALL __LOADLOCR4
000831 962a      	ADIW R28,10
000832 90ff      	POP  R15
000833 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
000834 91e9          ld   r30,y+
000835 91f9          ld   r31,y+
000836 91a9          ld   r26,y+
000837 91b9          ld   r27,y+
000838 01cd          movw r24,r26
                 strcpyf0:
000839 9005      	lpm  r0,z+
00083a 920d          st   x+,r0
00083b 2000          tst  r0
00083c f7e1          brne strcpyf0
00083d 01fc          movw r30,r24
00083e 9508          ret
                 _strlen:
00083f 91a9          ld   r26,y+
000840 91b9          ld   r27,y+
000841 27ee          clr  r30
000842 27ff          clr  r31
                 strlen0:
000843 916d          ld   r22,x+
000844 2366          tst  r22
000845 f011          breq strlen1
000846 9631          adiw r30,1
000847 cffb          rjmp strlen0
                 strlen1:
000848 9508          ret
                 _strlenf:
000849 27aa          clr  r26
00084a 27bb          clr  r27
00084b 91e9          ld   r30,y+
00084c 91f9          ld   r31,y+
                 strlenf0:
00084d 9005      	lpm  r0,z+
00084e 2000          tst  r0
00084f f011          breq strlenf1
000850 9611          adiw r26,1
000851 cffb          rjmp strlenf0
                 strlenf1:
000852 01fd          movw r30,r26
000853 9508          ret
                 
                 	.CSEG
                 _ftrunc:
000854 817b         ldd  r23,y+3
000855 816a         ldd  r22,y+2
000856 81f9         ldd  r31,y+1
000857 81e8         ld   r30,y
000858 fb77         bst  r23,7
000859 0f77         lsl  r23
00085a fd67         sbrc r22,7
00085b 6071         sbr  r23,1
00085c 2f97         mov  r25,r23
00085d 579e         subi r25,0x7e
00085e f081         breq __ftrunc0
00085f f078         brcs __ftrunc0
000860 3198         cpi  r25,24
000861 f490         brsh __ftrunc1
000862 27aa         clr  r26
000863 27bb         clr  r27
000864 2788         clr  r24
                 __ftrunc2:
000865 9408         sec
000866 9587         ror  r24
000867 95b7         ror  r27
000868 95a7         ror  r26
000869 959a         dec  r25
00086a f7d1         brne __ftrunc2
00086b 23ea         and  r30,r26
00086c 23fb         and  r31,r27
00086d 2368         and  r22,r24
00086e c005         rjmp __ftrunc1
                 __ftrunc0:
00086f 94e8         clt
000870 2777         clr  r23
000871 27ee         clr  r30
000872 27ff         clr  r31
000873 2766         clr  r22
                 __ftrunc1:
000874 776f         cbr  r22,0x80
000875 9576         lsr  r23
000876 f408         brcc __ftrunc3
000877 6860         sbr  r22,0x80
                 __ftrunc3:
000878 f977         bld  r23,7
000879 91a9         ld   r26,y+
00087a 91b9         ld   r27,y+
00087b 9189         ld   r24,y+
00087c 9199         ld   r25,y+
00087d 17ea         cp   r30,r26
00087e 07fb         cpc  r31,r27
00087f 0768         cpc  r22,r24
000880 0779         cpc  r23,r25
000881 fb97         bst  r25,7
000882 9508         ret
                 _floor:
000883 940e 0a94 	CALL SUBOPT_0x32
000885 940e 0d14 	CALL __PUTPARD1
000887 940e 0854 	CALL _ftrunc
000889 940e 0d0f 	CALL __PUTD1S0
00088b f419          brne __floor1
                 __floor0:
00088c 940e 0a94 	CALL SUBOPT_0x32
00088e c009      	RJMP _0x20C0003
                 __floor1:
00088f f7e6          brtc __floor0
000890 940e 0a94 	CALL SUBOPT_0x32
                +
000892 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000893 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000894 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000895 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000896 940e 0b6b 	CALL __SUBF12
                 _0x20C0003:
000898 9624      	ADIW R28,4
000899 9508      	RET
                 
                 	.CSEG
                 _ftoa:
00089a 9724      	SBIW R28,4
00089b e0e0      	LDI  R30,LOW(0)
00089c 83e8      	ST   Y,R30
00089d 83e9      	STD  Y+1,R30
00089e 83ea      	STD  Y+2,R30
00089f e3ef      	LDI  R30,LOW(63)
0008a0 83eb      	STD  Y+3,R30
0008a1 931a      	ST   -Y,R17
0008a2 930a      	ST   -Y,R16
0008a3 85eb      	LDD  R30,Y+11
0008a4 85fc      	LDD  R31,Y+11+1
0008a5 3fef      	CPI  R30,LOW(0xFFFF)
0008a6 efaf      	LDI  R26,HIGH(0xFFFF)
0008a7 07fa      	CPC  R31,R26
0008a8 f429      	BRNE _0x20A000D
0008a9 d1ed      	RCALL SUBOPT_0x33
                +
0008aa efe0     +LDI R30 , LOW ( 2 * _0x20A0000 + ( 0 ) )
0008ab e0f0     +LDI R31 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW1FN _0x20A0000,0
0008ac d12d      	RCALL SUBOPT_0x19
0008ad c08a      	RJMP _0x20C0002
                 _0x20A000D:
0008ae 3fef      	CPI  R30,LOW(0x7FFF)
0008af e7af      	LDI  R26,HIGH(0x7FFF)
0008b0 07fa      	CPC  R31,R26
0008b1 f429      	BRNE _0x20A000C
0008b2 d1e4      	RCALL SUBOPT_0x33
                +
0008b3 efe1     +LDI R30 , LOW ( 2 * _0x20A0000 + ( 1 ) )
0008b4 e0f0     +LDI R31 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW1FN _0x20A0000,1
0008b5 d124      	RCALL SUBOPT_0x19
0008b6 c081      	RJMP _0x20C0002
                 _0x20A000C:
0008b7 85ac      	LDD  R26,Y+12
0008b8 23aa      	TST  R26
0008b9 f452      	BRPL _0x20A000F
                +
0008ba 85e9     +LDD R30 , Y + 9
0008bb 85fa     +LDD R31 , Y + 9 + 1
0008bc 856b     +LDD R22 , Y + 9 + 2
0008bd 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0008be 940e 0acc 	CALL __ANEGF1
0008c0 d1db      	RCALL SUBOPT_0x34
0008c1 d1df      	RCALL SUBOPT_0x35
0008c2 e2ed      	LDI  R30,LOW(45)
0008c3 93ec      	ST   X,R30
                 _0x20A000F:
0008c4 85a8      	LDD  R26,Y+8
0008c5 30a7      	CPI  R26,LOW(0x7)
0008c6 f010      	BRLO _0x20A0010
0008c7 e0e6      	LDI  R30,LOW(6)
0008c8 87e8      	STD  Y+8,R30
                 _0x20A0010:
0008c9 8518      	LDD  R17,Y+8
                 _0x20A0011:
0008ca 2fe1      	MOV  R30,R17
0008cb 5011      	SUBI R17,1
0008cc 30e0      	CPI  R30,0
0008cd f031      	BREQ _0x20A0013
0008ce d1d9      	RCALL SUBOPT_0x36
0008cf d145      	RCALL SUBOPT_0x20
0008d0 940e 0bc2 	CALL __MULF12
0008d2 d1da      	RCALL SUBOPT_0x37
0008d3 cff6      	RJMP _0x20A0011
                 _0x20A0013:
0008d4 d1dd      	RCALL SUBOPT_0x38
0008d5 940e 0b72 	CALL __ADDF12
0008d7 d1c4      	RCALL SUBOPT_0x34
0008d8 e010      	LDI  R17,LOW(0)
                +
0008d9 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0008da e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0008db e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0008dc e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0008dd d1cf      	RCALL SUBOPT_0x37
                 _0x20A0014:
0008de d1d3      	RCALL SUBOPT_0x38
0008df 940e 0c55 	CALL __CMPF12
0008e1 f060      	BRLO _0x20A0016
0008e2 d1c5      	RCALL SUBOPT_0x36
0008e3 d125      	RCALL SUBOPT_0x1E
0008e4 d1c8      	RCALL SUBOPT_0x37
0008e5 5f1f      	SUBI R17,-LOW(1)
0008e6 3217      	CPI  R17,39
0008e7 f028      	BRLO _0x20A0017
0008e8 d1ae      	RCALL SUBOPT_0x33
                +
0008e9 efe5     +LDI R30 , LOW ( 2 * _0x20A0000 + ( 5 ) )
0008ea e0f0     +LDI R31 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW1FN _0x20A0000,5
0008eb d0ee      	RCALL SUBOPT_0x19
0008ec c04b      	RJMP _0x20C0002
                 _0x20A0017:
0008ed cff0      	RJMP _0x20A0014
                 _0x20A0016:
0008ee 3010      	CPI  R17,0
0008ef f421      	BRNE _0x20A0018
0008f0 d1b0      	RCALL SUBOPT_0x35
0008f1 e3e0      	LDI  R30,LOW(48)
0008f2 93ec      	ST   X,R30
0008f3 c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
0008f4 2fe1      	MOV  R30,R17
0008f5 5011      	SUBI R17,1
0008f6 30e0      	CPI  R30,0
0008f7 f0e1      	BREQ _0x20A001C
0008f8 d1af      	RCALL SUBOPT_0x36
0008f9 d11b      	RCALL SUBOPT_0x20
0008fa d0b1      	RCALL SUBOPT_0x13
0008fb 940e 0d14 	CALL __PUTPARD1
0008fd 940e 0883 	CALL _floor
0008ff d1ad      	RCALL SUBOPT_0x37
000900 d1b1      	RCALL SUBOPT_0x38
000901 940e 0c10 	CALL __DIVF21
000903 940e 0aff 	CALL __CFD1U
000905 2f0e      	MOV  R16,R30
000906 d19a      	RCALL SUBOPT_0x35
000907 d119      	RCALL SUBOPT_0x22
000908 e0f0      	LDI  R31,0
000909 d19e      	RCALL SUBOPT_0x36
00090a 940e 0c8c 	CALL __CWD1
00090c 940e 0b38 	CALL __CDF1
00090e 940e 0bc2 	CALL __MULF12
000910 d1aa      	RCALL SUBOPT_0x39
000911 d0a3      	RCALL SUBOPT_0x14
000912 d189      	RCALL SUBOPT_0x34
000913 cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
000914 85e8      	LDD  R30,Y+8
000915 30e0      	CPI  R30,0
000916 f0e9      	BREQ _0x20C0001
000917 d189      	RCALL SUBOPT_0x35
000918 e2ee      	LDI  R30,LOW(46)
000919 93ec      	ST   X,R30
                 _0x20A001E:
00091a 85e8      	LDD  R30,Y+8
00091b 50e1      	SUBI R30,LOW(1)
00091c 87e8      	STD  Y+8,R30
00091d 5fef      	SUBI R30,-LOW(1)
00091e f0a9      	BREQ _0x20A0020
00091f d19b      	RCALL SUBOPT_0x39
000920 d0e8      	RCALL SUBOPT_0x1E
000921 d17a      	RCALL SUBOPT_0x34
                +
000922 85e9     +LDD R30 , Y + 9
000923 85fa     +LDD R31 , Y + 9 + 1
000924 856b     +LDD R22 , Y + 9 + 2
000925 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000926 940e 0aff 	CALL __CFD1U
000928 2f0e      	MOV  R16,R30
000929 d177      	RCALL SUBOPT_0x35
00092a d0f6      	RCALL SUBOPT_0x22
00092b e0f0      	LDI  R31,0
00092c d18e      	RCALL SUBOPT_0x39
00092d 940e 0c8c 	CALL __CWD1
00092f 940e 0b38 	CALL __CDF1
000931 d083      	RCALL SUBOPT_0x14
000932 d169      	RCALL SUBOPT_0x34
000933 cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000934 81ae      	LDD  R26,Y+6
000935 81bf      	LDD  R27,Y+6+1
000936 e0e0      	LDI  R30,LOW(0)
000937 93ec      	ST   X,R30
                 _0x20C0002:
000938 8119      	LDD  R17,Y+1
000939 8108      	LDD  R16,Y+0
00093a 962d      	ADIW R28,13
00093b 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _distance:
000358           	.BYTE 0x4
                 __base_y_G100:
00035c           	.BYTE 0x4
                 __lcd_x:
000360           	.BYTE 0x1
                 __lcd_y:
000361           	.BYTE 0x1
                 __lcd_maxx:
000362           	.BYTE 0x1
                 __seed_G105:
000363           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x0:
00093c 940e 0349 	CALL _wheelAndThrottleControl
00093e 940c 037d 	JMP  _brakeLightControl
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1:
000940 92aa      	ST   -Y,R10
000941 929a      	ST   -Y,R9
000942 940c 01c9 	JMP  _showLCD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
000944 ece8      	LDI  R30,LOW(200)
000945 e0f0      	LDI  R31,HIGH(200)
000946 93fa      	ST   -Y,R31
000947 93ea      	ST   -Y,R30
000948 940c 0ac0 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3:
00094a 91a0 0358 	LDS  R26,_distance
00094c 91b0 0359 	LDS  R27,_distance+1
00094e 9180 035a 	LDS  R24,_distance+2
000950 9190 035b 	LDS  R25,_distance+3
000952 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
                +
000953 e0e0     +LDI R30 , LOW ( 0x42C80000 )
000954 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
000955 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
000956 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
000957 940e 0c55 	CALL __CMPF12
000959 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
00095a e0e0      	LDI  R30,LOW(0)
00095b 93e0 0085 	STS  133,R30
00095d 93e0 0084 	STS  132,R30
00095f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000960 940e 0d14 	CALL __PUTPARD1
000962 e084      	LDI  R24,4
000963 940e 07fe 	CALL _sprintf
000965 9628      	ADIW R28,8
000966 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
000967 93fa      	ST   -Y,R31
000968 93ea      	ST   -Y,R30
000969 940c 048a 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
00096b e0e0      	LDI  R30,LOW(0)
00096c 93ea      	ST   -Y,R30
00096d e0e1      	LDI  R30,LOW(1)
00096e 93ea      	ST   -Y,R30
00096f 940c 0449 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000971 e0e0      	LDI  R30,LOW(0)
000972 93ea      	ST   -Y,R30
000973 e0e2      	LDI  R30,LOW(2)
000974 93ea      	ST   -Y,R30
000975 940c 0449 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000977 ece8      	LDI  R30,LOW(200)
000978 e0f0      	LDI  R31,HIGH(200)
000979 169e      	CP   R9,R30
00097a 06af      	CPC  R10,R31
00097b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
00097c e0a0      	LDI  R26,0
00097d 9931      	SBIC 0x6,1
00097e e0a1      	LDI  R26,1
00097f 30a0      	CPI  R26,LOW(0x0)
000980 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xC:
                +
000981 2de9     +MOV R30 , R9
000982 2dfa     +MOV R31 , R10
                 	__GETW1R 9,10
000983 9731      	SBIW R30,1
                +
000984 2e9e     +MOV R9 , R30
000985 2eaf     +MOV R10 , R31
                 	__PUTW1R 9,10
000986 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000987 eee8      	LDI  R30,LOW(1000)
000988 e0f3      	LDI  R31,HIGH(1000)
000989 93fa      	ST   -Y,R31
00098a 93ea      	ST   -Y,R30
00098b 940c 0ac0 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
00098d efe4      	LDI  R30,LOW(500)
00098e e0f1      	LDI  R31,HIGH(500)
00098f 93fa      	ST   -Y,R31
000990 93ea      	ST   -Y,R30
000991 940e 0ac0 	CALL _delay_ms
000993 cfa8      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
000994 e0a0      	LDI  R26,0
000995 9933      	SBIC 0x6,3
000996 e0a1      	LDI  R26,1
000997 30a0      	CPI  R26,LOW(0x0)
000998 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
000999 e0e1      	LDI  R30,LOW(1)
00099a e0f0      	LDI  R31,HIGH(1)
                +
00099b 0e9e     +ADD R9 , R30
00099c 1eaf     +ADC R10 , R31
                 	__ADDWRR 9,10,30,31
00099d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11:
00099e e9e0      	LDI  R30,LOW(400)
00099f e0f1      	LDI  R31,HIGH(400)
0009a0 93fa      	ST   -Y,R31
0009a1 93ea      	ST   -Y,R30
0009a2 940e 0ac0 	CALL _delay_ms
0009a4 cf97      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12:
0009a5 e5e8      	LDI  R30,LOW(600)
0009a6 e0f2      	LDI  R31,HIGH(600)
0009a7 93fa      	ST   -Y,R31
0009a8 93ea      	ST   -Y,R30
0009a9 940e 0ac0 	CALL _delay_ms
0009ab cf90      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13:
0009ac 940e 0bc2 	CALL __MULF12
                +
0009ae e0a0     +LDI R26 , LOW ( 0x3F000000 )
0009af e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0009b0 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0009b1 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0009b2 940e 0b72 	CALL __ADDF12
0009b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
0009b5 940e 0d19 	CALL __SWAPD12
0009b7 940e 0b6b 	CALL __SUBF12
0009b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
0009ba df8f      	RCALL SUBOPT_0x3
0009bb 940e 0c8c 	CALL __CWD1
0009bd 940e 0b38 	CALL __CDF1
0009bf 940e 0c55 	CALL __CMPF12
0009c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x16:
0009c2 93ea      	ST   -Y,R30
0009c3 940e 043c 	CALL __lcd_write_data
0009c5 e0e3      	LDI  R30,LOW(3)
0009c6 e0f0      	LDI  R31,HIGH(3)
0009c7 93fa      	ST   -Y,R31
0009c8 93ea      	ST   -Y,R30
0009c9 940c 0ac0 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x17:
0009cb e3e0      	LDI  R30,LOW(48)
0009cc 93ea      	ST   -Y,R30
0009cd 940e 0418 	CALL __lcd_write_nibble_G100
                +
0009cf ec88     +LDI R24 , LOW ( 200 )
0009d0 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0009d1 9701     +SBIW R24 , 1
0009d2 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0009d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18:
0009d4 91ed      	LD   R30,X+
0009d5 91fd      	LD   R31,X+
0009d6 9631      	ADIW R30,1
0009d7 93fe      	ST   -X,R31
0009d8 93ee      	ST   -X,R30
0009d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
0009da 93fa      	ST   -Y,R31
0009db 93ea      	ST   -Y,R30
0009dc 940c 0834 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1A:
                +
0009de 81ac     +LDD R26 , Y + 4
0009df 81bd     +LDD R27 , Y + 4 + 1
0009e0 818e     +LDD R24 , Y + 4 + 2
0009e1 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0009e2 e0e0     +LDI R30 , LOW ( 0x41200000 )
0009e3 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0009e4 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0009e5 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0009e6 940e 0bc2 	CALL __MULF12
                +
0009e8 83ec     +STD Y + 4 , R30
0009e9 83fd     +STD Y + 4 + 1 , R31
0009ea 836e     +STD Y + 4 + 2 , R22
0009eb 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0009ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B:
                +
0009ed 81ec     +LDD R30 , Y + 4
0009ee 81fd     +LDD R31 , Y + 4 + 1
0009ef 816e     +LDD R22 , Y + 4 + 2
0009f0 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0009f1 85ac     +LDD R26 , Y + 12
0009f2 85bd     +LDD R27 , Y + 12 + 1
0009f3 858e     +LDD R24 , Y + 12 + 2
0009f4 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0009f5 940e 0c55 	CALL __CMPF12
0009f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C:
                +
0009f8 85ac     +LDD R26 , Y + 12
0009f9 85bd     +LDD R27 , Y + 12 + 1
0009fa 858e     +LDD R24 , Y + 12 + 2
0009fb 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0009fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1D:
                +
0009fd eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0009fe ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0009ff ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000a00 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000a01 940e 0bc2 	CALL __MULF12
                +
000a03 87ec     +STD Y + 12 , R30
000a04 87fd     +STD Y + 12 + 1 , R31
000a05 876e     +STD Y + 12 + 2 , R22
000a06 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000a07 5f3f      	SUBI R19,-LOW(1)
000a08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
                +
000a09 e0e0     +LDI R30 , LOW ( 0x41200000 )
000a0a e0f0     +LDI R31 , HIGH ( 0x41200000 )
000a0b e260     +LDI R22 , BYTE3 ( 0x41200000 )
000a0c e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000a0d 940e 0bc2 	CALL __MULF12
000a0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
                +
000a10 87ec     +STD Y + 12 , R30
000a11 87fd     +STD Y + 12 + 1 , R31
000a12 876e     +STD Y + 12 + 2 , R22
000a13 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000a14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
                +
000a15 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000a16 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000a17 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000a18 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000a19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
000a1a 85a8      	LDD  R26,Y+8
000a1b 85b9      	LDD  R27,Y+8+1
000a1c 9611      	ADIW R26,1
000a1d 87a8      	STD  Y+8,R26
000a1e 87b9      	STD  Y+8+1,R27
000a1f 9711      	SBIW R26,1
000a20 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
000a21 2fe0      	MOV  R30,R16
000a22 5de0      	SUBI R30,-LOW(48)
000a23 93ec      	ST   X,R30
000a24 2fe0      	MOV  R30,R16
000a25 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x23:
000a26 85e8      	LDD  R30,Y+8
000a27 85f9      	LDD  R31,Y+8+1
000a28 9631      	ADIW R30,1
000a29 87e8      	STD  Y+8,R30
000a2a 87f9      	STD  Y+8+1,R31
000a2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x24:
000a2c 932a      	ST   -Y,R18
000a2d 81ef      	LDD  R30,Y+7
000a2e 85f8      	LDD  R31,Y+7+1
000a2f 93fa      	ST   -Y,R31
000a30 93ea      	ST   -Y,R30
000a31 85eb      	LDD  R30,Y+11
000a32 85fc      	LDD  R31,Y+11+1
000a33 9509      	ICALL
000a34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x25:
                +
000a35 01fe     +MOVW R30 , R28
000a36 5ae6     +SUBI R30 , LOW ( - 90 )
000a37 4fff     +SBCI R31 , HIGH ( - 90 )
000a38 9001     +LD R0 , Z +
000a39 81f0     +LD R31 , Z
000a3a 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000a3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x26:
000a3c 9734      	SBIW R30,4
                +
000a3d 01de     +MOVW R26 , R28
000a3e 5aa6     +SUBI R26 , LOW ( - 90 )
000a3f 4fbf     +SBCI R27 , HIGH ( - 90 )
000a40 93ed     +ST X + , R30
000a41 93fc     +ST X , R31
                 	__PUTW1SX 90
000a42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x27:
000a43 81ef      	LDD  R30,Y+7
000a44 85f8      	LDD  R31,Y+7+1
000a45 93fa      	ST   -Y,R31
000a46 93ea      	ST   -Y,R30
000a47 85eb      	LDD  R30,Y+11
000a48 85fc      	LDD  R31,Y+11+1
000a49 9509      	ICALL
000a4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x28:
                +
000a4b 01de     +MOVW R26 , R28
000a4c 5aa6     +SUBI R26 , LOW ( - 90 )
000a4d 4fbf     +SBCI R27 , HIGH ( - 90 )
000a4e 900d     +LD R0 , X +
000a4f 91bc     +LD R27 , X
000a50 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000a51 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29:
                +
000a52 87ea     +STD Y + 10 , R30
000a53 87fb     +STD Y + 10 + 1 , R31
000a54 876c     +STD Y + 10 + 2 , R22
000a55 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000a56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2A:
000a57 dfdd      	RCALL SUBOPT_0x25
000a58 cfe3      	RJMP SUBOPT_0x26
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2B:
                +
000a59 85ea     +LDD R30 , Y + 10
000a5a 85fb     +LDD R31 , Y + 10 + 1
000a5b 856c     +LDD R22 , Y + 10 + 2
000a5c 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000a5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2C:
000a5e 87ee      	STD  Y+14,R30
000a5f 87ff      	STD  Y+14+1,R31
000a60 93fa      	ST   -Y,R31
000a61 93ea      	ST   -Y,R30
000a62 940e 083f 	CALL _strlen
000a64 2f1e      	MOV  R17,R30
000a65 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2D:
000a66 dfe4      	RCALL SUBOPT_0x28
000a67 9614      	ADIW R26,4
000a68 940e 0d00 	CALL __GETW1P
000a6a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E:
                +
000a6b 8be8     +STD Y + 16 , R30
000a6c 8bf9     +STD Y + 16 + 1 , R31
000a6d 8b6a     +STD Y + 16 + 2 , R22
000a6e 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000a6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x2F:
000a70 7f0b      	ANDI R16,LOW(251)
000a71 89ed      	LDD  R30,Y+21
000a72 93ea      	ST   -Y,R30
                +
000a73 01fe     +MOVW R30 , R28
000a74 5ae9     +SUBI R30 , LOW ( - 87 )
000a75 4fff     +SBCI R31 , HIGH ( - 87 )
000a76 9001     +LD R0 , Z +
000a77 81f0     +LD R31 , Z
000a78 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000a79 93fa      	ST   -Y,R31
000a7a 93ea      	ST   -Y,R30
                +
000a7b 01fe     +MOVW R30 , R28
000a7c 5ae5     +SUBI R30 , LOW ( - 91 )
000a7d 4fff     +SBCI R31 , HIGH ( - 91 )
000a7e 9001     +LD R0 , Z +
000a7f 81f0     +LD R31 , Z
000a80 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000a81 9509      	ICALL
000a82 3050      	CPI  R21,0
000a83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30:
                +
000a84 89e8     +LDD R30 , Y + 16
000a85 89f9     +LDD R31 , Y + 16 + 1
000a86 896a     +LDD R22 , Y + 16 + 2
000a87 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000a88 85aa     +LDD R26 , Y + 10
000a89 85bb     +LDD R27 , Y + 10 + 1
000a8a 858c     +LDD R24 , Y + 10 + 2
000a8b 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000a8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31:
000a8d 01de      	MOVW R26,R28
000a8e 961c      	ADIW R26,12
000a8f 940e 0c75 	CALL __ADDW2R15
000a91 940e 0d00 	CALL __GETW1P
000a93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
000a94 940e 0d0a 	CALL __GETD1S0
000a96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33:
000a97 81ee      	LDD  R30,Y+6
000a98 81ff      	LDD  R31,Y+6+1
000a99 93fa      	ST   -Y,R31
000a9a 93ea      	ST   -Y,R30
000a9b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x34:
                +
000a9c 87e9     +STD Y + 9 , R30
000a9d 87fa     +STD Y + 9 + 1 , R31
000a9e 876b     +STD Y + 9 + 2 , R22
000a9f 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000aa0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x35:
000aa1 81ae      	LDD  R26,Y+6
000aa2 81bf      	LDD  R27,Y+6+1
000aa3 9611      	ADIW R26,1
000aa4 83ae      	STD  Y+6,R26
000aa5 83bf      	STD  Y+6+1,R27
000aa6 9711      	SBIW R26,1
000aa7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x36:
                +
000aa8 81aa     +LDD R26 , Y + 2
000aa9 81bb     +LDD R27 , Y + 2 + 1
000aaa 818c     +LDD R24 , Y + 2 + 2
000aab 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000aac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x37:
                +
000aad 83ea     +STD Y + 2 , R30
000aae 83fb     +STD Y + 2 + 1 , R31
000aaf 836c     +STD Y + 2 + 2 , R22
000ab0 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000ab1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x38:
                +
000ab2 81ea     +LDD R30 , Y + 2
000ab3 81fb     +LDD R31 , Y + 2 + 1
000ab4 816c     +LDD R22 , Y + 2 + 2
000ab5 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000ab6 85a9     +LDD R26 , Y + 9
000ab7 85ba     +LDD R27 , Y + 9 + 1
000ab8 858b     +LDD R24 , Y + 9 + 2
000ab9 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000aba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39:
                +
000abb 85a9     +LDD R26 , Y + 9
000abc 85ba     +LDD R27 , Y + 9 + 1
000abd 858b     +LDD R24 , Y + 9 + 2
000abe 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000abf 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000ac0 91e9      	ld   r30,y+
000ac1 91f9      	ld   r31,y+
000ac2 9630      	adiw r30,0
000ac3 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000ac4 ed80     +LDI R24 , LOW ( 0x7D0 )
000ac5 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000ac6 9701     +SBIW R24 , 1
000ac7 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000ac8 95a8      	wdr
000ac9 9731      	sbiw r30,1
000aca f7c9      	brne __delay_ms0
                 __delay_ms1:
000acb 9508      	ret
                 
                 __ANEGF1:
000acc 9730      	SBIW R30,0
000acd 4060      	SBCI R22,0
000ace 4070      	SBCI R23,0
000acf f009      	BREQ __ANEGF10
000ad0 5870      	SUBI R23,0x80
                 __ANEGF10:
000ad1 9508      	RET
                 
                 __ROUND_REPACK:
000ad2 2355      	TST  R21
000ad3 f442      	BRPL __REPACK
000ad4 3850      	CPI  R21,0x80
000ad5 f411      	BRNE __ROUND_REPACK0
000ad6 ffe0      	SBRS R30,0
000ad7 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000ad8 9631      	ADIW R30,1
000ad9 1f69      	ADC  R22,R25
000ada 1f79      	ADC  R23,R25
000adb f06b      	BRVS __REPACK1
                 
                 __REPACK:
000adc e850      	LDI  R21,0x80
000add 2757      	EOR  R21,R23
000ade f411      	BRNE __REPACK0
000adf 935f      	PUSH R21
000ae0 c0cf      	RJMP __ZERORES
                 __REPACK0:
000ae1 3f5f      	CPI  R21,0xFF
000ae2 f031      	BREQ __REPACK1
000ae3 0f66      	LSL  R22
000ae4 0c00      	LSL  R0
000ae5 9557      	ROR  R21
000ae6 9567      	ROR  R22
000ae7 2f75      	MOV  R23,R21
000ae8 9508      	RET
                 __REPACK1:
000ae9 935f      	PUSH R21
000aea 2000      	TST  R0
000aeb f00a      	BRMI __REPACK2
000aec c0cf      	RJMP __MAXRES
                 __REPACK2:
000aed c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000aee e850      	LDI  R21,0x80
000aef 2e19      	MOV  R1,R25
000af0 2215      	AND  R1,R21
000af1 0f88      	LSL  R24
000af2 1f99      	ROL  R25
000af3 2795      	EOR  R25,R21
000af4 0f55      	LSL  R21
000af5 9587      	ROR  R24
                 
                 __UNPACK1:
000af6 e850      	LDI  R21,0x80
000af7 2e07      	MOV  R0,R23
000af8 2205      	AND  R0,R21
000af9 0f66      	LSL  R22
000afa 1f77      	ROL  R23
000afb 2775      	EOR  R23,R21
000afc 0f55      	LSL  R21
000afd 9567      	ROR  R22
000afe 9508      	RET
                 
                 __CFD1U:
000aff 9468      	SET
000b00 c001      	RJMP __CFD1U0
                 __CFD1:
000b01 94e8      	CLT
                 __CFD1U0:
000b02 935f      	PUSH R21
000b03 dff2      	RCALL __UNPACK1
000b04 3870      	CPI  R23,0x80
000b05 f018      	BRLO __CFD10
000b06 3f7f      	CPI  R23,0xFF
000b07 f408      	BRCC __CFD10
000b08 c0a7      	RJMP __ZERORES
                 __CFD10:
000b09 e156      	LDI  R21,22
000b0a 1b57      	SUB  R21,R23
000b0b f4aa      	BRPL __CFD11
000b0c 9551      	NEG  R21
000b0d 3058      	CPI  R21,8
000b0e f40e      	BRTC __CFD19
000b0f 3059      	CPI  R21,9
                 __CFD19:
000b10 f030      	BRLO __CFD17
000b11 efef      	SER  R30
000b12 efff      	SER  R31
000b13 ef6f      	SER  R22
000b14 e77f      	LDI  R23,0x7F
000b15 f977      	BLD  R23,7
000b16 c01a      	RJMP __CFD15
                 __CFD17:
000b17 2777      	CLR  R23
000b18 2355      	TST  R21
000b19 f0b9      	BREQ __CFD15
                 __CFD18:
000b1a 0fee      	LSL  R30
000b1b 1fff      	ROL  R31
000b1c 1f66      	ROL  R22
000b1d 1f77      	ROL  R23
000b1e 955a      	DEC  R21
000b1f f7d1      	BRNE __CFD18
000b20 c010      	RJMP __CFD15
                 __CFD11:
000b21 2777      	CLR  R23
                 __CFD12:
000b22 3058      	CPI  R21,8
000b23 f028      	BRLO __CFD13
000b24 2fef      	MOV  R30,R31
000b25 2ff6      	MOV  R31,R22
000b26 2f67      	MOV  R22,R23
000b27 5058      	SUBI R21,8
000b28 cff9      	RJMP __CFD12
                 __CFD13:
000b29 2355      	TST  R21
000b2a f031      	BREQ __CFD15
                 __CFD14:
000b2b 9576      	LSR  R23
000b2c 9567      	ROR  R22
000b2d 95f7      	ROR  R31
000b2e 95e7      	ROR  R30
000b2f 955a      	DEC  R21
000b30 f7d1      	BRNE __CFD14
                 __CFD15:
000b31 2000      	TST  R0
000b32 f40a      	BRPL __CFD16
000b33 d145      	RCALL __ANEGD1
                 __CFD16:
000b34 915f      	POP  R21
000b35 9508      	RET
                 
                 __CDF1U:
000b36 9468      	SET
000b37 c001      	RJMP __CDF1U0
                 __CDF1:
000b38 94e8      	CLT
                 __CDF1U0:
000b39 9730      	SBIW R30,0
000b3a 4060      	SBCI R22,0
000b3b 4070      	SBCI R23,0
000b3c f0b1      	BREQ __CDF10
000b3d 2400      	CLR  R0
000b3e f026      	BRTS __CDF11
000b3f 2377      	TST  R23
000b40 f412      	BRPL __CDF11
000b41 9400      	COM  R0
000b42 d136      	RCALL __ANEGD1
                 __CDF11:
000b43 2e17      	MOV  R1,R23
000b44 e17e      	LDI  R23,30
000b45 2011      	TST  R1
                 __CDF12:
000b46 f032      	BRMI __CDF13
000b47 957a      	DEC  R23
000b48 0fee      	LSL  R30
000b49 1fff      	ROL  R31
000b4a 1f66      	ROL  R22
000b4b 1c11      	ROL  R1
000b4c cff9      	RJMP __CDF12
                 __CDF13:
000b4d 2fef      	MOV  R30,R31
000b4e 2ff6      	MOV  R31,R22
000b4f 2d61      	MOV  R22,R1
000b50 935f      	PUSH R21
000b51 df8a      	RCALL __REPACK
000b52 915f      	POP  R21
                 __CDF10:
000b53 9508      	RET
                 
                 __SWAPACC:
000b54 934f      	PUSH R20
000b55 01af      	MOVW R20,R30
000b56 01fd      	MOVW R30,R26
000b57 01da      	MOVW R26,R20
000b58 01ab      	MOVW R20,R22
000b59 01bc      	MOVW R22,R24
000b5a 01ca      	MOVW R24,R20
000b5b 2d40      	MOV  R20,R0
000b5c 2c01      	MOV  R0,R1
000b5d 2e14      	MOV  R1,R20
000b5e 914f      	POP  R20
000b5f 9508      	RET
                 
                 __UADD12:
000b60 0fea      	ADD  R30,R26
000b61 1ffb      	ADC  R31,R27
000b62 1f68      	ADC  R22,R24
000b63 9508      	RET
                 
                 __NEGMAN1:
000b64 95e0      	COM  R30
000b65 95f0      	COM  R31
000b66 9560      	COM  R22
000b67 5fef      	SUBI R30,-1
000b68 4fff      	SBCI R31,-1
000b69 4f6f      	SBCI R22,-1
000b6a 9508      	RET
                 
                 __SUBF12:
000b6b 935f      	PUSH R21
000b6c df81      	RCALL __UNPACK
000b6d 3890      	CPI  R25,0x80
000b6e f171      	BREQ __ADDF129
000b6f e850      	LDI  R21,0x80
000b70 2615      	EOR  R1,R21
                 
000b71 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000b72 935f      	PUSH R21
000b73 df7a      	RCALL __UNPACK
000b74 3890      	CPI  R25,0x80
000b75 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000b76 3870      	CPI  R23,0x80
000b77 f121      	BREQ __ADDF128
                 __ADDF121:
000b78 2f57      	MOV  R21,R23
000b79 1b59      	SUB  R21,R25
000b7a f12b      	BRVS __ADDF1211
000b7b f412      	BRPL __ADDF122
000b7c dfd7      	RCALL __SWAPACC
000b7d cffa      	RJMP __ADDF121
                 __ADDF122:
000b7e 3158      	CPI  R21,24
000b7f f018      	BRLO __ADDF123
000b80 27aa      	CLR  R26
000b81 27bb      	CLR  R27
000b82 2788      	CLR  R24
                 __ADDF123:
000b83 3058      	CPI  R21,8
000b84 f028      	BRLO __ADDF124
000b85 2fab      	MOV  R26,R27
000b86 2fb8      	MOV  R27,R24
000b87 2788      	CLR  R24
000b88 5058      	SUBI R21,8
000b89 cff9      	RJMP __ADDF123
                 __ADDF124:
000b8a 2355      	TST  R21
000b8b f029      	BREQ __ADDF126
                 __ADDF125:
000b8c 9586      	LSR  R24
000b8d 95b7      	ROR  R27
000b8e 95a7      	ROR  R26
000b8f 955a      	DEC  R21
000b90 f7d9      	BRNE __ADDF125
                 __ADDF126:
000b91 2d50      	MOV  R21,R0
000b92 2551      	EOR  R21,R1
000b93 f072      	BRMI __ADDF127
000b94 dfcb      	RCALL __UADD12
000b95 f438      	BRCC __ADDF129
000b96 9567      	ROR  R22
000b97 95f7      	ROR  R31
000b98 95e7      	ROR  R30
000b99 9573      	INC  R23
000b9a f413      	BRVC __ADDF129
000b9b c020      	RJMP __MAXRES
                 __ADDF128:
000b9c dfb7      	RCALL __SWAPACC
                 __ADDF129:
000b9d df3e      	RCALL __REPACK
000b9e 915f      	POP  R21
000b9f 9508      	RET
                 __ADDF1211:
000ba0 f7d8      	BRCC __ADDF128
000ba1 cffb      	RJMP __ADDF129
                 __ADDF127:
000ba2 1bea      	SUB  R30,R26
000ba3 0bfb      	SBC  R31,R27
000ba4 0b68      	SBC  R22,R24
000ba5 f051      	BREQ __ZERORES
000ba6 f410      	BRCC __ADDF1210
000ba7 9400      	COM  R0
000ba8 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000ba9 2366      	TST  R22
000baa f392      	BRMI __ADDF129
000bab 0fee      	LSL  R30
000bac 1fff      	ROL  R31
000bad 1f66      	ROL  R22
000bae 957a      	DEC  R23
000baf f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000bb0 27ee      	CLR  R30
000bb1 27ff      	CLR  R31
000bb2 2766      	CLR  R22
000bb3 2777      	CLR  R23
000bb4 915f      	POP  R21
000bb5 9508      	RET
                 
                 __MINRES:
000bb6 efef      	SER  R30
000bb7 efff      	SER  R31
000bb8 e76f      	LDI  R22,0x7F
000bb9 ef7f      	SER  R23
000bba 915f      	POP  R21
000bbb 9508      	RET
                 
                 __MAXRES:
000bbc efef      	SER  R30
000bbd efff      	SER  R31
000bbe e76f      	LDI  R22,0x7F
000bbf e77f      	LDI  R23,0x7F
000bc0 915f      	POP  R21
000bc1 9508      	RET
                 
                 __MULF12:
000bc2 935f      	PUSH R21
000bc3 df2a      	RCALL __UNPACK
000bc4 3870      	CPI  R23,0x80
000bc5 f351      	BREQ __ZERORES
000bc6 3890      	CPI  R25,0x80
000bc7 f341      	BREQ __ZERORES
000bc8 2401      	EOR  R0,R1
000bc9 9408      	SEC
000bca 1f79      	ADC  R23,R25
000bcb f423      	BRVC __MULF124
000bcc f31c      	BRLT __ZERORES
                 __MULF125:
000bcd 2000      	TST  R0
000bce f33a      	BRMI __MINRES
000bcf cfec      	RJMP __MAXRES
                 __MULF124:
000bd0 920f      	PUSH R0
000bd1 931f      	PUSH R17
000bd2 932f      	PUSH R18
000bd3 933f      	PUSH R19
000bd4 934f      	PUSH R20
000bd5 2711      	CLR  R17
000bd6 2722      	CLR  R18
000bd7 2799      	CLR  R25
000bd8 9f68      	MUL  R22,R24
000bd9 01a0      	MOVW R20,R0
000bda 9f8f      	MUL  R24,R31
000bdb 2d30      	MOV  R19,R0
000bdc 0d41      	ADD  R20,R1
000bdd 1f59      	ADC  R21,R25
000bde 9f6b      	MUL  R22,R27
000bdf 0d30      	ADD  R19,R0
000be0 1d41      	ADC  R20,R1
000be1 1f59      	ADC  R21,R25
000be2 9f8e      	MUL  R24,R30
000be3 d027      	RCALL __MULF126
000be4 9fbf      	MUL  R27,R31
000be5 d025      	RCALL __MULF126
000be6 9f6a      	MUL  R22,R26
000be7 d023      	RCALL __MULF126
000be8 9fbe      	MUL  R27,R30
000be9 d01d      	RCALL __MULF127
000bea 9faf      	MUL  R26,R31
000beb d01b      	RCALL __MULF127
000bec 9fae      	MUL  R26,R30
000bed 0d11      	ADD  R17,R1
000bee 1f29      	ADC  R18,R25
000bef 1f39      	ADC  R19,R25
000bf0 1f49      	ADC  R20,R25
000bf1 1f59      	ADC  R21,R25
000bf2 2fe3      	MOV  R30,R19
000bf3 2ff4      	MOV  R31,R20
000bf4 2f65      	MOV  R22,R21
000bf5 2f52      	MOV  R21,R18
000bf6 914f      	POP  R20
000bf7 913f      	POP  R19
000bf8 912f      	POP  R18
000bf9 911f      	POP  R17
000bfa 900f      	POP  R0
000bfb 2366      	TST  R22
000bfc f02a      	BRMI __MULF122
000bfd 0f55      	LSL  R21
000bfe 1fee      	ROL  R30
000bff 1fff      	ROL  R31
000c00 1f66      	ROL  R22
000c01 c002      	RJMP __MULF123
                 __MULF122:
000c02 9573      	INC  R23
000c03 f24b      	BRVS __MULF125
                 __MULF123:
000c04 decd      	RCALL __ROUND_REPACK
000c05 915f      	POP  R21
000c06 9508      	RET
                 
                 __MULF127:
000c07 0d10      	ADD  R17,R0
000c08 1d21      	ADC  R18,R1
000c09 1f39      	ADC  R19,R25
000c0a c002      	RJMP __MULF128
                 __MULF126:
000c0b 0d20      	ADD  R18,R0
000c0c 1d31      	ADC  R19,R1
                 __MULF128:
000c0d 1f49      	ADC  R20,R25
000c0e 1f59      	ADC  R21,R25
000c0f 9508      	RET
                 
                 __DIVF21:
000c10 935f      	PUSH R21
000c11 dedc      	RCALL __UNPACK
000c12 3870      	CPI  R23,0x80
000c13 f421      	BRNE __DIVF210
000c14 2011      	TST  R1
                 __DIVF211:
000c15 f40a      	BRPL __DIVF219
000c16 cf9f      	RJMP __MINRES
                 __DIVF219:
000c17 cfa4      	RJMP __MAXRES
                 __DIVF210:
000c18 3890      	CPI  R25,0x80
000c19 f409      	BRNE __DIVF218
                 __DIVF217:
000c1a cf95      	RJMP __ZERORES
                 __DIVF218:
000c1b 2401      	EOR  R0,R1
000c1c 9408      	SEC
000c1d 0b97      	SBC  R25,R23
000c1e f41b      	BRVC __DIVF216
000c1f f3d4      	BRLT __DIVF217
000c20 2000      	TST  R0
000c21 cff3      	RJMP __DIVF211
                 __DIVF216:
000c22 2f79      	MOV  R23,R25
000c23 931f      	PUSH R17
000c24 932f      	PUSH R18
000c25 933f      	PUSH R19
000c26 934f      	PUSH R20
000c27 2411      	CLR  R1
000c28 2711      	CLR  R17
000c29 2722      	CLR  R18
000c2a 2733      	CLR  R19
000c2b 2744      	CLR  R20
000c2c 2755      	CLR  R21
000c2d e290      	LDI  R25,32
                 __DIVF212:
000c2e 17ae      	CP   R26,R30
000c2f 07bf      	CPC  R27,R31
000c30 0786      	CPC  R24,R22
000c31 0741      	CPC  R20,R17
000c32 f030      	BRLO __DIVF213
000c33 1bae      	SUB  R26,R30
000c34 0bbf      	SBC  R27,R31
000c35 0b86      	SBC  R24,R22
000c36 0b41      	SBC  R20,R17
000c37 9408      	SEC
000c38 c001      	RJMP __DIVF214
                 __DIVF213:
000c39 9488      	CLC
                 __DIVF214:
000c3a 1f55      	ROL  R21
000c3b 1f22      	ROL  R18
000c3c 1f33      	ROL  R19
000c3d 1c11      	ROL  R1
000c3e 1faa      	ROL  R26
000c3f 1fbb      	ROL  R27
000c40 1f88      	ROL  R24
000c41 1f44      	ROL  R20
000c42 959a      	DEC  R25
000c43 f751      	BRNE __DIVF212
000c44 01f9      	MOVW R30,R18
000c45 2d61      	MOV  R22,R1
000c46 914f      	POP  R20
000c47 913f      	POP  R19
000c48 912f      	POP  R18
000c49 911f      	POP  R17
000c4a 2366      	TST  R22
000c4b f032      	BRMI __DIVF215
000c4c 0f55      	LSL  R21
000c4d 1fee      	ROL  R30
000c4e 1fff      	ROL  R31
000c4f 1f66      	ROL  R22
000c50 957a      	DEC  R23
000c51 f243      	BRVS __DIVF217
                 __DIVF215:
000c52 de7f      	RCALL __ROUND_REPACK
000c53 915f      	POP  R21
000c54 9508      	RET
                 
                 __CMPF12:
000c55 2399      	TST  R25
000c56 f09a      	BRMI __CMPF120
000c57 2377      	TST  R23
000c58 f042      	BRMI __CMPF121
000c59 1797      	CP   R25,R23
000c5a f048      	BRLO __CMPF122
000c5b f429      	BRNE __CMPF121
000c5c 17ae      	CP   R26,R30
000c5d 07bf      	CPC  R27,R31
000c5e 0786      	CPC  R24,R22
000c5f f020      	BRLO __CMPF122
000c60 f031      	BREQ __CMPF123
                 __CMPF121:
000c61 9498      	CLZ
000c62 9488      	CLC
000c63 9508      	RET
                 __CMPF122:
000c64 9498      	CLZ
000c65 9408      	SEC
000c66 9508      	RET
                 __CMPF123:
000c67 9418      	SEZ
000c68 9488      	CLC
000c69 9508      	RET
                 __CMPF120:
000c6a 2377      	TST  R23
000c6b f7c2      	BRPL __CMPF122
000c6c 1797      	CP   R25,R23
000c6d f398      	BRLO __CMPF121
000c6e f7a9      	BRNE __CMPF122
000c6f 17ea      	CP   R30,R26
000c70 07fb      	CPC  R31,R27
000c71 0768      	CPC  R22,R24
000c72 f388      	BRLO __CMPF122
000c73 f399      	BREQ __CMPF123
000c74 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000c75 2400      	CLR  R0
000c76 0daf      	ADD  R26,R15
000c77 1db0      	ADC  R27,R0
000c78 9508      	RET
                 
                 __ANEGD1:
000c79 95f0      	COM  R31
000c7a 9560      	COM  R22
000c7b 9570      	COM  R23
000c7c 95e1      	NEG  R30
000c7d 4fff      	SBCI R31,-1
000c7e 4f6f      	SBCI R22,-1
000c7f 4f7f      	SBCI R23,-1
000c80 9508      	RET
                 
                 __LSLW2:
000c81 0fee      	LSL  R30
000c82 1fff      	ROL  R31
000c83 0fee      	LSL  R30
000c84 1fff      	ROL  R31
000c85 9508      	RET
                 
                 __CBD1:
000c86 2ffe      	MOV  R31,R30
000c87 0fff      	ADD  R31,R31
000c88 0bff      	SBC  R31,R31
000c89 2f6f      	MOV  R22,R31
000c8a 2f7f      	MOV  R23,R31
000c8b 9508      	RET
                 
                 __CWD1:
000c8c 2f6f      	MOV  R22,R31
000c8d 0f66      	ADD  R22,R22
000c8e 0b66      	SBC  R22,R22
000c8f 2f76      	MOV  R23,R22
000c90 9508      	RET
                 
                 __MULW12U:
000c91 9ffa      	MUL  R31,R26
000c92 2df0      	MOV  R31,R0
000c93 9feb      	MUL  R30,R27
000c94 0df0      	ADD  R31,R0
000c95 9fea      	MUL  R30,R26
000c96 2de0      	MOV  R30,R0
000c97 0df1      	ADD  R31,R1
000c98 9508      	RET
                 
                 __DIVB21U:
000c99 2400      	CLR  R0
000c9a e098      	LDI  R25,8
                 __DIVB21U1:
000c9b 0faa      	LSL  R26
000c9c 1c00      	ROL  R0
000c9d 1a0e      	SUB  R0,R30
000c9e f410      	BRCC __DIVB21U2
000c9f 0e0e      	ADD  R0,R30
000ca0 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000ca1 60a1      	SBR  R26,1
                 __DIVB21U3:
000ca2 959a      	DEC  R25
000ca3 f7b9      	BRNE __DIVB21U1
000ca4 2fea      	MOV  R30,R26
000ca5 2da0      	MOV  R26,R0
000ca6 9508      	RET
                 
                 __DIVB21:
000ca7 d04c      	RCALL __CHKSIGNB
000ca8 dff0      	RCALL __DIVB21U
000ca9 f40e      	BRTC __DIVB211
000caa 95e1      	NEG  R30
                 __DIVB211:
000cab 9508      	RET
                 
                 __DIVW21U:
000cac 2400      	CLR  R0
000cad 2411      	CLR  R1
000cae e190      	LDI  R25,16
                 __DIVW21U1:
000caf 0faa      	LSL  R26
000cb0 1fbb      	ROL  R27
000cb1 1c00      	ROL  R0
000cb2 1c11      	ROL  R1
000cb3 1a0e      	SUB  R0,R30
000cb4 0a1f      	SBC  R1,R31
000cb5 f418      	BRCC __DIVW21U2
000cb6 0e0e      	ADD  R0,R30
000cb7 1e1f      	ADC  R1,R31
000cb8 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000cb9 60a1      	SBR  R26,1
                 __DIVW21U3:
000cba 959a      	DEC  R25
000cbb f799      	BRNE __DIVW21U1
000cbc 01fd      	MOVW R30,R26
000cbd 01d0      	MOVW R26,R0
000cbe 9508      	RET
                 
                 __DIVD21U:
000cbf 933f      	PUSH R19
000cc0 934f      	PUSH R20
000cc1 935f      	PUSH R21
000cc2 2400      	CLR  R0
000cc3 2411      	CLR  R1
000cc4 2744      	CLR  R20
000cc5 2755      	CLR  R21
000cc6 e230      	LDI  R19,32
                 __DIVD21U1:
000cc7 0faa      	LSL  R26
000cc8 1fbb      	ROL  R27
000cc9 1f88      	ROL  R24
000cca 1f99      	ROL  R25
000ccb 1c00      	ROL  R0
000ccc 1c11      	ROL  R1
000ccd 1f44      	ROL  R20
000cce 1f55      	ROL  R21
000ccf 1a0e      	SUB  R0,R30
000cd0 0a1f      	SBC  R1,R31
000cd1 0b46      	SBC  R20,R22
000cd2 0b57      	SBC  R21,R23
000cd3 f428      	BRCC __DIVD21U2
000cd4 0e0e      	ADD  R0,R30
000cd5 1e1f      	ADC  R1,R31
000cd6 1f46      	ADC  R20,R22
000cd7 1f57      	ADC  R21,R23
000cd8 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000cd9 60a1      	SBR  R26,1
                 __DIVD21U3:
000cda 953a      	DEC  R19
000cdb f759      	BRNE __DIVD21U1
000cdc 01fd      	MOVW R30,R26
000cdd 01bc      	MOVW R22,R24
000cde 01d0      	MOVW R26,R0
000cdf 01ca      	MOVW R24,R20
000ce0 915f      	POP  R21
000ce1 914f      	POP  R20
000ce2 913f      	POP  R19
000ce3 9508      	RET
                 
                 __MODB21:
000ce4 94e8      	CLT
000ce5 ffa7      	SBRS R26,7
000ce6 c002      	RJMP __MODB211
000ce7 95a1      	NEG  R26
000ce8 9468      	SET
                 __MODB211:
000ce9 fde7      	SBRC R30,7
000cea 95e1      	NEG  R30
000ceb dfad      	RCALL __DIVB21U
000cec 2fea      	MOV  R30,R26
000ced f40e      	BRTC __MODB212
000cee 95e1      	NEG  R30
                 __MODB212:
000cef 9508      	RET
                 
                 __MODD21U:
000cf0 dfce      	RCALL __DIVD21U
000cf1 01fd      	MOVW R30,R26
000cf2 01bc      	MOVW R22,R24
000cf3 9508      	RET
                 
                 __CHKSIGNB:
000cf4 94e8      	CLT
000cf5 ffe7      	SBRS R30,7
000cf6 c002      	RJMP __CHKSB1
000cf7 95e1      	NEG  R30
000cf8 9468      	SET
                 __CHKSB1:
000cf9 ffa7      	SBRS R26,7
000cfa c004      	RJMP __CHKSB2
000cfb 95a1      	NEG  R26
000cfc f800      	BLD  R0,0
000cfd 9403      	INC  R0
000cfe fa00      	BST  R0,0
                 __CHKSB2:
000cff 9508      	RET
                 
                 __GETW1P:
000d00 91ed      	LD   R30,X+
000d01 91fc      	LD   R31,X
000d02 9711      	SBIW R26,1
000d03 9508      	RET
                 
                 __GETD1P:
000d04 91ed      	LD   R30,X+
000d05 91fd      	LD   R31,X+
000d06 916d      	LD   R22,X+
000d07 917c      	LD   R23,X
000d08 9713      	SBIW R26,3
000d09 9508      	RET
                 
                 __GETD1S0:
000d0a 81e8      	LD   R30,Y
000d0b 81f9      	LDD  R31,Y+1
000d0c 816a      	LDD  R22,Y+2
000d0d 817b      	LDD  R23,Y+3
000d0e 9508      	RET
                 
                 __PUTD1S0:
000d0f 83e8      	ST   Y,R30
000d10 83f9      	STD  Y+1,R31
000d11 836a      	STD  Y+2,R22
000d12 837b      	STD  Y+3,R23
000d13 9508      	RET
                 
                 __PUTPARD1:
000d14 937a      	ST   -Y,R23
000d15 936a      	ST   -Y,R22
000d16 93fa      	ST   -Y,R31
000d17 93ea      	ST   -Y,R30
000d18 9508      	RET
                 
                 __SWAPD12:
000d19 2e18      	MOV  R1,R24
000d1a 2f86      	MOV  R24,R22
000d1b 2d61      	MOV  R22,R1
000d1c 2e19      	MOV  R1,R25
000d1d 2f97      	MOV  R25,R23
000d1e 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000d1f 2e1b      	MOV  R1,R27
000d20 2fbf      	MOV  R27,R31
000d21 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000d22 2e1a      	MOV  R1,R26
000d23 2fae      	MOV  R26,R30
000d24 2de1      	MOV  R30,R1
000d25 9508      	RET
                 
                 __CPD10:
000d26 9730      	SBIW R30,0
000d27 4060      	SBCI R22,0
000d28 4070      	SBCI R23,0
000d29 9508      	RET
                 
                 __SAVELOCR6:
000d2a 935a      	ST   -Y,R21
                 __SAVELOCR5:
000d2b 934a      	ST   -Y,R20
                 __SAVELOCR4:
000d2c 933a      	ST   -Y,R19
                 __SAVELOCR3:
000d2d 932a      	ST   -Y,R18
                 __SAVELOCR2:
000d2e 931a      	ST   -Y,R17
000d2f 930a      	ST   -Y,R16
000d30 9508      	RET
                 
                 __LOADLOCR6:
000d31 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000d32 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000d33 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000d34 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000d35 8119      	LDD  R17,Y+1
000d36 8108      	LD   R16,Y
000d37 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  85 r1 :  41 r2 :   0 r3 :  21 r4 :  12 r5 :   4 r6 :   4 r7 :   8 
r8 :   8 r9 :  35 r10:  35 r11:   8 r12:   8 r13:   3 r14:   3 r15:   6 
r16:  54 r17:  62 r18:  48 r19:  35 r20:  50 r21:  90 r22: 119 r23: 104 
r24:  79 r25:  68 r26: 203 r27:  85 r28:  39 r29:   1 r30: 702 r31: 276 
x  :  38 y  : 482 z  :  26 
Registers used: 34 out of 35 (97.1%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  29 add   :  24 
adiw  :  39 and   :   5 andi  :  11 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   1 break :   0 breq  :  62 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  35 
brlt  :   2 brmi  :  11 brne  :  97 brpl  :   9 brsh  :  17 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 251 
cbi   :  15 cbr   :   2 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  64 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  54 cpc   :  37 cpi   :  86 cpse  :   0 dec   :  17 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   7 inc   :   3 jmp   :  45 ld    :  82 ldd   : 190 ldi   : 376 
lds   :  14 lpm   :  12 lsl   :  17 lsr   :   3 mov   : 128 movw  :  59 
mul   :  14 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   2 
ori   :   8 out   :  20 pop   :  22 push  :  22 rcall :  94 ret   : 108 
reti  :   3 rjmp  : 187 rol   :  37 ror   :  15 sbc   :  13 sbci  :  20 
sbi   :  21 sbic  :   9 sbis  :   0 sbiw  :  45 sbr   :   5 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 170 std   :  93 sts   :  27 sub   :   8 subi  :  50 swap  :   1 
tst   :  24 wdr   :   2 
Instructions used: 82 out of 116 (70.7%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001a70   6548    220   6768   32768  20.7%
[.dseg] 0x000100 0x000367      0    103    103    2303   4.5%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 10 warnings
